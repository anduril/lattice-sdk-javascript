/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../mock-server/MockServerPool";
import { latticeClient } from "../../src/Client";

describe("Objects", () => {
    test("deleteObject", async () => {
        const server = mockServerPool.createServer();
        const client = new latticeClient({ token: "test", environment: server.baseUrl });

        server.mockEndpoint().delete("/api/v1/objects/objectPath").respondWith().statusCode(200).build();

        const response = await client.objects.deleteObject("objectPath");
        expect(response).toEqual(undefined);
    });

    test("getObjectMetadata", async () => {
        const server = mockServerPool.createServer();
        const client = new latticeClient({ token: "test", environment: server.baseUrl });

        server.mockEndpoint().head("/api/v1/objects/objectPath").respondWith().statusCode(200).build();

        const headers = await client.objects.getObjectMetadata("objectPath");
        expect(headers).toBeInstanceOf(Headers);
    });
});
