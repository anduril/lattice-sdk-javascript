// @generated by protoc-gen-es v1.7.2 with parameter "js_import_style=legacy_commonjs"
// @generated from file anduril/tasks/v2/shared/strike.pub.proto (package anduril.tasks.v2, syntax proto3)
/* eslint-disable */
// @ts-nocheck

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

const { Duration, Empty, proto3 } = require("@bufbuild/protobuf");
const { Objective } = require("../objective.pub_pb.js");
const { AnglePair, AreaConstraints } = require("../common.pub_pb.js");

/**
 * Maps to BREVITY code SMACK.
 *
 * @generated from message anduril.tasks.v2.Smack
 */
const Smack = proto3.makeMessageType(
  "anduril.tasks.v2.Smack",
  () => [
    { no: 1, name: "objective", kind: "message", T: Objective },
    { no: 2, name: "parameters", kind: "message", T: StrikeParameters },
  ],
);

/**
 * Maps to UCI StrikeTask.
 *
 * @generated from message anduril.tasks.v2.Strike
 */
const Strike = proto3.makeMessageType(
  "anduril.tasks.v2.Strike",
  () => [
    { no: 1, name: "objective", kind: "message", T: Objective },
    { no: 2, name: "ingress_angle", kind: "message", T: AnglePair },
    { no: 3, name: "strike_release_constraint", kind: "message", T: StrikeReleaseConstraint },
    { no: 4, name: "parameters", kind: "message", T: StrikeParameters },
  ],
);

/**
 * Maps to UCI StrikeTaskReleaseConstraintsType.
 *
 * @generated from message anduril.tasks.v2.StrikeReleaseConstraint
 */
const StrikeReleaseConstraint = proto3.makeMessageType(
  "anduril.tasks.v2.StrikeReleaseConstraint",
  () => [
    { no: 1, name: "release_area", kind: "message", T: AreaConstraints, oneof: "strike_release_constraint" },
  ],
);

/**
 * @generated from message anduril.tasks.v2.StrikeParameters
 */
const StrikeParameters = proto3.makeMessageType(
  "anduril.tasks.v2.StrikeParameters",
  () => [
    { no: 1, name: "payloads_to_employ", kind: "message", T: PayloadConfiguration, repeated: true },
    { no: 2, name: "desired_impact_time", kind: "message", T: Duration },
    { no: 3, name: "run_in_bearing", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 4, name: "glide_slope_angle", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
  ],
);

/**
 * Individual payload configuration, can represent a munition such as a missile, a gun, or a non-kinetic effect.
 *
 * @generated from message anduril.tasks.v2.PayloadConfiguration
 */
const PayloadConfiguration = proto3.makeMessageType(
  "anduril.tasks.v2.PayloadConfiguration",
  () => [
    { no: 1, name: "capability_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "quantity", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ],
);

/**
 * Releases a payload from the vehicle
 *
 * @generated from message anduril.tasks.v2.ReleasePayload
 */
const ReleasePayload = proto3.makeMessageType(
  "anduril.tasks.v2.ReleasePayload",
  () => [
    { no: 1, name: "payloads", kind: "message", T: PayloadConfiguration, repeated: true },
    { no: 2, name: "objective", kind: "message", T: Objective },
    { no: 3, name: "precision_release", kind: "message", T: Empty, oneof: "release_method" },
  ],
);


exports.Smack = Smack;
exports.Strike = Strike;
exports.StrikeReleaseConstraint = StrikeReleaseConstraint;
exports.StrikeParameters = StrikeParameters;
exports.PayloadConfiguration = PayloadConfiguration;
exports.ReleasePayload = ReleasePayload;
