// @generated by protoc-gen-es v2.0.0
// @generated from file anduril/tasks/v2/shared/maneuver.pub.proto (package anduril.tasks.v2, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { Objective, Point } from "../objective.pub_pb";
import type { Loiter } from "./isr.pub_pb";

/**
 * Describes the file anduril/tasks/v2/shared/maneuver.pub.proto.
 */
export declare const file_anduril_tasks_v2_shared_maneuver_pub: GenFile;

/**
 * Maps to BREVITY code Marshal.
 * Establish(ed) at a specific point, typically used to posture forces in preparation for an offensive operation.
 *
 * @generated from message anduril.tasks.v2.Marshal
 */
export declare type Marshal = Message<"anduril.tasks.v2.Marshal"> & {
  /**
   * Objective to Marshal to.
   *
   * @generated from field: anduril.tasks.v2.Objective objective = 1;
   */
  objective?: Objective;
};

/**
 * Describes the message anduril.tasks.v2.Marshal.
 * Use `create(MarshalSchema)` to create a new message.
 */
export declare const MarshalSchema: GenMessage<Marshal>;

/**
 * Maps to UCI code RoutePlan.
 * Used to command a platform between locations by requesting to make this RoutePlan the single primary active route.
 *
 * @generated from message anduril.tasks.v2.Transit
 */
export declare type Transit = Message<"anduril.tasks.v2.Transit"> & {
  /**
   * @generated from field: anduril.tasks.v2.RoutePlan plan = 1;
   */
  plan?: RoutePlan;
};

/**
 * Describes the message anduril.tasks.v2.Transit.
 * Use `create(TransitSchema)` to create a new message.
 */
export declare const TransitSchema: GenMessage<Transit>;

/**
 * @generated from message anduril.tasks.v2.RoutePlan
 */
export declare type RoutePlan = Message<"anduril.tasks.v2.RoutePlan"> & {
  /**
   * @generated from field: anduril.tasks.v2.Route route = 1;
   */
  route?: Route;
};

/**
 * Describes the message anduril.tasks.v2.RoutePlan.
 * Use `create(RoutePlanSchema)` to create a new message.
 */
export declare const RoutePlanSchema: GenMessage<RoutePlan>;

/**
 * @generated from message anduril.tasks.v2.Route
 */
export declare type Route = Message<"anduril.tasks.v2.Route"> & {
  /**
   * @generated from field: repeated anduril.tasks.v2.PathSegment path = 1;
   */
  path: PathSegment[];
};

/**
 * Describes the message anduril.tasks.v2.Route.
 * Use `create(RouteSchema)` to create a new message.
 */
export declare const RouteSchema: GenMessage<Route>;

/**
 * @generated from message anduril.tasks.v2.PathSegment
 */
export declare type PathSegment = Message<"anduril.tasks.v2.PathSegment"> & {
  /**
   * @generated from oneof anduril.tasks.v2.PathSegment.end_point
   */
  endPoint: {
    /**
     * @generated from field: anduril.tasks.v2.Waypoint waypoint = 1;
     */
    value: Waypoint;
    case: "waypoint";
  } | {
    /**
     * @generated from field: anduril.tasks.v2.Loiter loiter = 2;
     */
    value: Loiter;
    case: "loiter";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message anduril.tasks.v2.PathSegment.
 * Use `create(PathSegmentSchema)` to create a new message.
 */
export declare const PathSegmentSchema: GenMessage<PathSegment>;

/**
 * @generated from message anduril.tasks.v2.Waypoint
 */
export declare type Waypoint = Message<"anduril.tasks.v2.Waypoint"> & {
  /**
   * @generated from oneof anduril.tasks.v2.Waypoint.point
   */
  point: {
    /**
     * @generated from field: anduril.tasks.v2.Point lla_point = 1;
     */
    value: Point;
    case: "llaPoint";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message anduril.tasks.v2.Waypoint.
 * Use `create(WaypointSchema)` to create a new message.
 */
export declare const WaypointSchema: GenMessage<Waypoint>;

/**
 * @generated from message anduril.tasks.v2.SetLaunchRoute
 */
export declare type SetLaunchRoute = Message<"anduril.tasks.v2.SetLaunchRoute"> & {
  /**
   * @generated from field: anduril.tasks.v2.RoutePlan plan = 1;
   */
  plan?: RoutePlan;

  /**
   * @generated from field: anduril.tasks.v2.LaunchTrackingMode tracking_mode = 2;
   */
  trackingMode: LaunchTrackingMode;
};

/**
 * Describes the message anduril.tasks.v2.SetLaunchRoute.
 * Use `create(SetLaunchRouteSchema)` to create a new message.
 */
export declare const SetLaunchRouteSchema: GenMessage<SetLaunchRoute>;

/**
 * @generated from enum anduril.tasks.v2.LaunchTrackingMode
 */
export enum LaunchTrackingMode {
  /**
   * @generated from enum value: LAUNCH_TRACKING_MODE_INVALID = 0;
   */
  INVALID = 0,

  /**
   * @generated from enum value: LAUNCH_TRACKING_MODE_GO_TO_WAYPOINT = 1;
   */
  GO_TO_WAYPOINT = 1,

  /**
   * @generated from enum value: LAUNCH_TRACKING_MODE_TRACK_TO_WAYPOINT = 2;
   */
  TRACK_TO_WAYPOINT = 2,
}

/**
 * Describes the enum anduril.tasks.v2.LaunchTrackingMode.
 */
export declare const LaunchTrackingModeSchema: GenEnum<LaunchTrackingMode>;

