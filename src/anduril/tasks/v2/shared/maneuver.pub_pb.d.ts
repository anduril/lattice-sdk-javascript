// @generated by protoc-gen-es v1.7.2
// @generated from file anduril/tasks/v2/shared/maneuver.pub.proto (package anduril.tasks.v2, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { Objective, Point } from "../objective.pub_pb.js";
import type { Loiter } from "./isr.pub_pb.js";

/**
 * @generated from enum anduril.tasks.v2.LaunchTrackingMode
 */
export declare enum LaunchTrackingMode {
  /**
   * @generated from enum value: LAUNCH_TRACKING_MODE_INVALID = 0;
   */
  INVALID = 0,

  /**
   * @generated from enum value: LAUNCH_TRACKING_MODE_GO_TO_WAYPOINT = 1;
   */
  GO_TO_WAYPOINT = 1,

  /**
   * @generated from enum value: LAUNCH_TRACKING_MODE_TRACK_TO_WAYPOINT = 2;
   */
  TRACK_TO_WAYPOINT = 2,
}

/**
 * Maps to BREVITY code Marshal.
 * Establish(ed) at a specific point, typically used to posture forces in preparation for an offensive operation.
 *
 * @generated from message anduril.tasks.v2.Marshal
 */
export declare class Marshal extends Message<Marshal> {
  /**
   * Objective to Marshal to.
   *
   * @generated from field: anduril.tasks.v2.Objective objective = 1;
   */
  objective?: Objective;

  constructor(data?: PartialMessage<Marshal>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "anduril.tasks.v2.Marshal";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Marshal;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Marshal;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Marshal;

  static equals(a: Marshal | PlainMessage<Marshal> | undefined, b: Marshal | PlainMessage<Marshal> | undefined): boolean;
}

/**
 * Maps to UCI code RoutePlan.
 * Used to command a platform between locations by requesting to make this RoutePlan the single primary active route.
 *
 * @generated from message anduril.tasks.v2.Transit
 */
export declare class Transit extends Message<Transit> {
  /**
   * @generated from field: anduril.tasks.v2.RoutePlan plan = 1;
   */
  plan?: RoutePlan;

  constructor(data?: PartialMessage<Transit>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "anduril.tasks.v2.Transit";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Transit;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Transit;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Transit;

  static equals(a: Transit | PlainMessage<Transit> | undefined, b: Transit | PlainMessage<Transit> | undefined): boolean;
}

/**
 * @generated from message anduril.tasks.v2.RoutePlan
 */
export declare class RoutePlan extends Message<RoutePlan> {
  /**
   * @generated from field: anduril.tasks.v2.Route route = 1;
   */
  route?: Route;

  constructor(data?: PartialMessage<RoutePlan>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "anduril.tasks.v2.RoutePlan";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RoutePlan;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RoutePlan;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RoutePlan;

  static equals(a: RoutePlan | PlainMessage<RoutePlan> | undefined, b: RoutePlan | PlainMessage<RoutePlan> | undefined): boolean;
}

/**
 * @generated from message anduril.tasks.v2.Route
 */
export declare class Route extends Message<Route> {
  /**
   * @generated from field: repeated anduril.tasks.v2.PathSegment path = 1;
   */
  path: PathSegment[];

  constructor(data?: PartialMessage<Route>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "anduril.tasks.v2.Route";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Route;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Route;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Route;

  static equals(a: Route | PlainMessage<Route> | undefined, b: Route | PlainMessage<Route> | undefined): boolean;
}

/**
 * @generated from message anduril.tasks.v2.PathSegment
 */
export declare class PathSegment extends Message<PathSegment> {
  /**
   * @generated from oneof anduril.tasks.v2.PathSegment.end_point
   */
  endPoint: {
    /**
     * @generated from field: anduril.tasks.v2.Waypoint waypoint = 1;
     */
    value: Waypoint;
    case: "waypoint";
  } | {
    /**
     * @generated from field: anduril.tasks.v2.Loiter loiter = 2;
     */
    value: Loiter;
    case: "loiter";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<PathSegment>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "anduril.tasks.v2.PathSegment";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PathSegment;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PathSegment;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PathSegment;

  static equals(a: PathSegment | PlainMessage<PathSegment> | undefined, b: PathSegment | PlainMessage<PathSegment> | undefined): boolean;
}

/**
 * @generated from message anduril.tasks.v2.Waypoint
 */
export declare class Waypoint extends Message<Waypoint> {
  /**
   * @generated from oneof anduril.tasks.v2.Waypoint.point
   */
  point: {
    /**
     * @generated from field: anduril.tasks.v2.Point lla_point = 1;
     */
    value: Point;
    case: "llaPoint";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<Waypoint>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "anduril.tasks.v2.Waypoint";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Waypoint;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Waypoint;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Waypoint;

  static equals(a: Waypoint | PlainMessage<Waypoint> | undefined, b: Waypoint | PlainMessage<Waypoint> | undefined): boolean;
}

/**
 * @generated from message anduril.tasks.v2.SetLaunchRoute
 */
export declare class SetLaunchRoute extends Message<SetLaunchRoute> {
  /**
   * @generated from field: anduril.tasks.v2.RoutePlan plan = 1;
   */
  plan?: RoutePlan;

  /**
   * @generated from field: anduril.tasks.v2.LaunchTrackingMode tracking_mode = 2;
   */
  trackingMode: LaunchTrackingMode;

  constructor(data?: PartialMessage<SetLaunchRoute>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "anduril.tasks.v2.SetLaunchRoute";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetLaunchRoute;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetLaunchRoute;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetLaunchRoute;

  static equals(a: SetLaunchRoute | PlainMessage<SetLaunchRoute> | undefined, b: SetLaunchRoute | PlainMessage<SetLaunchRoute> | undefined): boolean;
}

