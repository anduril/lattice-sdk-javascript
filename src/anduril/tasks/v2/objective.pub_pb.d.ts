// @generated by protoc-gen-es v2.2.0
// @generated from file anduril/tasks/v2/objective.pub.proto (package anduril.tasks.v2, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { LLA } from "../../type/coords.pub_pb";

/**
 * Describes the file anduril/tasks/v2/objective.pub.proto.
 */
export declare const file_anduril_tasks_v2_objective_pub: GenFile;

/**
 * Describes the objective of a task.
 *
 * @generated from message anduril.tasks.v2.Objective
 */
export declare type Objective = Message<"anduril.tasks.v2.Objective"> & {
  /**
   * @generated from oneof anduril.tasks.v2.Objective.objective
   */
  objective: {
    /**
     * Prefer Entity Objectives whenever the objective is in fact an entity. In other words, don't take position/point
     * out of an entity and pass it as a simple point.
     *
     * @generated from field: string entity_id = 1;
     */
    value: string;
    case: "entityId";
  } | {
    /**
     * Point objectives for simple reference points that are not geo entities.
     *
     * @generated from field: anduril.tasks.v2.Point point = 5;
     */
    value: Point;
    case: "point";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message anduril.tasks.v2.Objective.
 * Use `create(ObjectiveSchema)` to create a new message.
 */
export declare const ObjectiveSchema: GenMessage<Objective>;

/**
 * Describes a single point location.
 *
 * @generated from message anduril.tasks.v2.Point
 */
export declare type Point = Message<"anduril.tasks.v2.Point"> & {
  /**
   * A human readable name for the point.
   *
   * @generated from field: string reference_name = 1;
   */
  referenceName: string;

  /**
   * Indicates the objective is the provided location.
   *
   * @generated from field: anduril.type.LLA lla = 2;
   */
  lla?: LLA;

  /**
   * An optional entity id that is provided for reverse lookup purposes. This may be used any time the UI might
   * have to convert a geoentity to statically defined LLA.
   *
   * @generated from field: string backing_entity_id = 3;
   */
  backingEntityId: string;
};

/**
 * Describes the message anduril.tasks.v2.Point.
 * Use `create(PointSchema)` to create a new message.
 */
export declare const PointSchema: GenMessage<Point>;

