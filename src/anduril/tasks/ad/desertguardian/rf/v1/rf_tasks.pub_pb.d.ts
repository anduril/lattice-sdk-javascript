// @generated by protoc-gen-es v1.7.2 with parameter "js_import_style=legacy_commonjs"
// @generated from file anduril/tasks/ad/desertguardian/rf/v1/rf_tasks.pub.proto (package anduril.tasks.ad.desertguardian.rf.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum anduril.tasks.ad.desertguardian.rf.v1.TransmitState
 */
export declare enum TransmitState {
  /**
   * @generated from enum value: TRANSMIT_STATE_INVALID = 0;
   */
  INVALID = 0,

  /**
   * @generated from enum value: TRANSMIT_STATE_TRANSMITTING = 1;
   */
  TRANSMITTING = 1,

  /**
   * @generated from enum value: TRANSMIT_STATE_NOT_TRANSMITTING = 2;
   */
  NOT_TRANSMITTING = 2,
}

/**
 * @generated from enum anduril.tasks.ad.desertguardian.rf.v1.SurveillanceState
 */
export declare enum SurveillanceState {
  /**
   * @generated from enum value: SURVEILLANCE_STATE_INVALID = 0;
   */
  INVALID = 0,

  /**
   * @generated from enum value: SURVEILLANCE_STATE_SURVEILLING = 1;
   */
  SURVEILLING = 1,

  /**
   * @generated from enum value: SURVEILLANCE_STATE_NOT_SURVEILLING = 2;
   */
  NOT_SURVEILLING = 2,
}

/**
 * @generated from enum anduril.tasks.ad.desertguardian.rf.v1.EmissionControlState
 */
export declare enum EmissionControlState {
  /**
   * @generated from enum value: EMISSION_CONTROL_STATE_INVALID = 0;
   */
  INVALID = 0,

  /**
   * @generated from enum value: EMISSION_CONTROL_STATE_ALLOWED = 1;
   */
  ALLOWED = 1,

  /**
   * @generated from enum value: EMISSION_CONTROL_STATE_NOT_ALLOWED = 2;
   */
  NOT_ALLOWED = 2,
}

/**
 * Set the transmit state of an RF Platform such as a Radar, Beacon, or Radio.
 *
 * @generated from message anduril.tasks.ad.desertguardian.rf.v1.SetTransmitState
 */
export declare class SetTransmitState extends Message<SetTransmitState> {
  /**
   * @generated from field: anduril.tasks.ad.desertguardian.rf.v1.TransmitState transmit_state = 1;
   */
  transmitState: TransmitState;

  constructor(data?: PartialMessage<SetTransmitState>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "anduril.tasks.ad.desertguardian.rf.v1.SetTransmitState";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetTransmitState;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetTransmitState;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetTransmitState;

  static equals(a: SetTransmitState | PlainMessage<SetTransmitState> | undefined, b: SetTransmitState | PlainMessage<SetTransmitState> | undefined): boolean;
}

/**
 * Set the surveillance state of a passive (listen-only) RF Platform.
 *
 * @generated from message anduril.tasks.ad.desertguardian.rf.v1.SetSurveillanceState
 */
export declare class SetSurveillanceState extends Message<SetSurveillanceState> {
  /**
   * @generated from field: anduril.tasks.ad.desertguardian.rf.v1.SurveillanceState surveillance_state = 1;
   */
  surveillanceState: SurveillanceState;

  constructor(data?: PartialMessage<SetSurveillanceState>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "anduril.tasks.ad.desertguardian.rf.v1.SetSurveillanceState";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetSurveillanceState;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetSurveillanceState;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetSurveillanceState;

  static equals(a: SetSurveillanceState | PlainMessage<SetSurveillanceState> | undefined, b: SetSurveillanceState | PlainMessage<SetSurveillanceState> | undefined): boolean;
}

/**
 * Set whether or not an RF Platform has Emmission Control (EmCon).
 * If supported, RF platforms should only expose the SetTransmitState task when EmissionControlState is EMISSION_CONTROL_STATE_ALLOWED.
 * When in EMISSION_CONTROL_STATE_NOT_ALLOWED, the Platform should be in TRANSMIT_STATE_NOT_TRANSMITTING, and should remove SetTransmitState from the task Catalog.
 *
 * @generated from message anduril.tasks.ad.desertguardian.rf.v1.SetEmissionControlState
 */
export declare class SetEmissionControlState extends Message<SetEmissionControlState> {
  /**
   * @generated from field: anduril.tasks.ad.desertguardian.rf.v1.EmissionControlState emcon_state = 1;
   */
  emconState: EmissionControlState;

  constructor(data?: PartialMessage<SetEmissionControlState>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "anduril.tasks.ad.desertguardian.rf.v1.SetEmissionControlState";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetEmissionControlState;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetEmissionControlState;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetEmissionControlState;

  static equals(a: SetEmissionControlState | PlainMessage<SetEmissionControlState> | undefined, b: SetEmissionControlState | PlainMessage<SetEmissionControlState> | undefined): boolean;
}

