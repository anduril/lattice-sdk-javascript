// @generated by protoc-gen-es v2.2.0
// @generated from file anduril/type/geometry.pub.proto (package anduril.type, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { LLA } from "./coords.pub_pb";

/**
 * Describes the file anduril/type/geometry.pub.proto.
 */
export declare const file_anduril_type_geometry_pub: GenFile;

/**
 * A 2d grid with binary values for each grid cell.
 *
 * @generated from message anduril.type.Grid
 */
export declare type Grid = Message<"anduril.type.Grid"> & {
  /**
   * The bottom left extent of the 2d grid. This represents the
   * farthest corner on the grid cell, not the center of the
   * grid cell.
   *
   * @generated from field: anduril.type.LLA bottom_left_pos = 1;
   */
  bottomLeftPos?: LLA;

  /**
   * The top right extent of the 2d grid. This represents the
   * farthest corner on the grid cell, not the center of the
   * grid cell.
   *
   * @generated from field: anduril.type.LLA top_right_pos = 2;
   */
  topRightPos?: LLA;

  /**
   * The width of the grid in number of cells.
   *
   * @generated from field: uint32 grid_width = 3;
   */
  gridWidth: number;

  /**
   * The height of the grid in number of cells.
   *
   * @generated from field: uint32 grid_height = 4;
   */
  gridHeight: number;

  /**
   * Stores the cell values. Each byte contains 8 bits representing
   * binary values of cells. Cells are unravelled in row-major order,
   * with the first cell located at the top-left corner of the grid.
   * In a single byte, the smallest bit represents the left most cell.
   *
   * @generated from field: bytes cell_values = 5;
   */
  cellValues: Uint8Array;
};

/**
 * Describes the message anduril.type.Grid.
 * Use `create(GridSchema)` to create a new message.
 */
export declare const GridSchema: GenMessage<Grid>;

