// @generated by protoc-gen-es v1.7.2
// @generated from file anduril/entitymanager/v1/supplies.pub.proto (package anduril.entitymanager.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3, Timestamp } from "@bufbuild/protobuf";
import { Classification } from "./classification.pub_pb.js";

/**
 * DOD Condition Codes as documented: DLM 4000.25, Volume 2, April 09, 2022 Change 14. located at https://www.dla.mil/Defense-Data-Standards/Publications/Appendices/
 * Please refer to the DLM reference for more details about each condition code
 *
 * @generated from enum anduril.entitymanager.v1.DODConditionCode
 */
export const DODConditionCode = proto3.makeEnum(
  "anduril.entitymanager.v1.DODConditionCode",
  [
    {no: 0, name: "DOD_CONDITION_CODE_INVALID"},
    {no: 1, name: "DOD_CONDITION_CODE_A"},
    {no: 2, name: "DOD_CONDITION_CODE_B"},
    {no: 3, name: "DOD_CONDITION_CODE_C"},
    {no: 4, name: "DOD_CONDITION_CODE_D"},
    {no: 5, name: "DOD_CONDITION_CODE_E"},
    {no: 6, name: "DOD_CONDITION_CODE_F"},
    {no: 7, name: "DOD_CONDITION_CODE_G"},
    {no: 8, name: "DOD_CONDITION_CODE_H"},
    {no: 9, name: "DOD_CONDITION_CODE_Q"},
    {no: 10, name: "DOD_CONDITION_CODE_S"},
    {no: 11, name: "DOD_CONDITION_CODE_J"},
    {no: 12, name: "DOD_CONDITION_CODE_K"},
    {no: 13, name: "DOD_CONDITION_CODE_L"},
    {no: 14, name: "DOD_CONDITION_CODE_M"},
    {no: 15, name: "DOD_CONDITION_CODE_N"},
    {no: 16, name: "DOD_CONDITION_CODE_P"},
    {no: 17, name: "DOD_CONDITION_CODE_R"},
    {no: 18, name: "DOD_CONDITION_CODE_T"},
    {no: 19, name: "DOD_CONDITION_CODE_V"},
    {no: 20, name: "DOD_CONDITION_CODE_X"},
  ],
);

/**
 * Represents the state of supplies associated with an entity (available but not in condition to use immediately)
 *
 * @generated from message anduril.entitymanager.v1.Supplies
 */
export const Supplies = proto3.makeMessageType(
  "anduril.entitymanager.v1.Supplies",
  () => [
    { no: 1, name: "munitions", kind: "message", T: Munition, repeated: true },
    { no: 2, name: "fuel", kind: "message", T: Fuel, repeated: true },
  ],
);

/**
 * Munition describes an entity's munitions stores of a similar condition, classification, and quantity
 *
 * @generated from message anduril.entitymanager.v1.Munition
 */
export const Munition = proto3.makeMessageType(
  "anduril.entitymanager.v1.Munition",
  () => [
    { no: 1, name: "munition_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "dod_condition_code", kind: "enum", T: proto3.getEnumType(DODConditionCode), oneof: "condition" },
    { no: 4, name: "quantity_units", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 5, name: "data_classification", kind: "message", T: Classification },
    { no: 6, name: "data_source", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * Fuel describes an entity's repository of fuels stores including current amount, operational requirements, and maximum authorized capacity
 *
 * @generated from message anduril.entitymanager.v1.Fuel
 */
export const Fuel = proto3.makeMessageType(
  "anduril.entitymanager.v1.Fuel",
  () => [
    { no: 1, name: "fuel_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "reported_date", kind: "message", T: Timestamp },
    { no: 4, name: "amount_gallons", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 5, name: "max_authorized_capacity_gallons", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 6, name: "operational_requirement_gallons", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 7, name: "data_classification", kind: "message", T: Classification },
    { no: 8, name: "data_source", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

