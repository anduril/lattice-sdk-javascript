// @generated by protoc-gen-es v2.0.0
// @generated from file anduril/entitymanager/v1/health_status.pub.proto (package anduril.entitymanager.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { Timestamp } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file anduril/entitymanager/v1/health_status.pub.proto.
 */
export declare const file_anduril_entitymanager_v1_health_status_pub: GenFile;

/**
 * A message describing the component's health status.
 *
 * @generated from message anduril.entitymanager.v1.ComponentMessage
 */
export declare type ComponentMessage = Message<"anduril.entitymanager.v1.ComponentMessage"> & {
  /**
   * The status associated with this message.
   *
   * @generated from field: anduril.entitymanager.v1.HealthStatus status = 1;
   */
  status: HealthStatus;

  /**
   * The human-readable content of the message.
   *
   * @generated from field: string message = 2;
   */
  message: string;
};

/**
 * Describes the message anduril.entitymanager.v1.ComponentMessage.
 * Use `create(ComponentMessageSchema)` to create a new message.
 */
export declare const ComponentMessageSchema: GenMessage<ComponentMessage>;

/**
 * Health of an individual component.
 *
 * @generated from message anduril.entitymanager.v1.ComponentHealth
 */
export declare type ComponentHealth = Message<"anduril.entitymanager.v1.ComponentHealth"> & {
  /**
   * Consistent internal ID for this component.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Display name for this component.
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * Health for this component.
   *
   * @generated from field: anduril.entitymanager.v1.HealthStatus health = 3;
   */
  health: HealthStatus;

  /**
   * Human-readable describing the component state. These messages should be understandable by end users.
   *
   * @generated from field: repeated anduril.entitymanager.v1.ComponentMessage messages = 4;
   */
  messages: ComponentMessage[];

  /**
   * The last update time for this specific component.
   * If this timestamp is unset, the data is assumed to be most recent
   *
   * @generated from field: google.protobuf.Timestamp update_time = 5;
   */
  updateTime?: Timestamp;
};

/**
 * Describes the message anduril.entitymanager.v1.ComponentHealth.
 * Use `create(ComponentHealthSchema)` to create a new message.
 */
export declare const ComponentHealthSchema: GenMessage<ComponentHealth>;

/**
 * General health of the entity as reported by the entity.
 *
 * @generated from message anduril.entitymanager.v1.Health
 */
export declare type Health = Message<"anduril.entitymanager.v1.Health"> & {
  /**
   * Status indicating whether the entity is able to communicate with Entity Manager.
   *
   * @generated from field: anduril.entitymanager.v1.ConnectionStatus connection_status = 1;
   */
  connectionStatus: ConnectionStatus;

  /**
   * Top-level health status; typically a roll-up of individual component healths.
   *
   * @generated from field: anduril.entitymanager.v1.HealthStatus health_status = 2;
   */
  healthStatus: HealthStatus;

  /**
   * Health of individual components running on this Entity.
   *
   * @generated from field: repeated anduril.entitymanager.v1.ComponentHealth components = 3;
   */
  components: ComponentHealth[];

  /**
   * The update time for the top-level health information.
   * If this timestamp is unset, the data is assumed to be most recent
   *
   * @generated from field: google.protobuf.Timestamp update_time = 4;
   */
  updateTime?: Timestamp;
};

/**
 * Describes the message anduril.entitymanager.v1.Health.
 * Use `create(HealthSchema)` to create a new message.
 */
export declare const HealthSchema: GenMessage<Health>;

/**
 * Enumeration of possible connection states.
 *
 * @generated from enum anduril.entitymanager.v1.ConnectionStatus
 */
export enum ConnectionStatus {
  /**
   * @generated from enum value: CONNECTION_STATUS_INVALID = 0;
   */
  INVALID = 0,

  /**
   * @generated from enum value: CONNECTION_STATUS_ONLINE = 1;
   */
  ONLINE = 1,

  /**
   * @generated from enum value: CONNECTION_STATUS_OFFLINE = 2;
   */
  OFFLINE = 2,
}

/**
 * Describes the enum anduril.entitymanager.v1.ConnectionStatus.
 */
export declare const ConnectionStatusSchema: GenEnum<ConnectionStatus>;

/**
 * Enumeration of possible health states.
 *
 * @generated from enum anduril.entitymanager.v1.HealthStatus
 */
export enum HealthStatus {
  /**
   * @generated from enum value: HEALTH_STATUS_INVALID = 0;
   */
  INVALID = 0,

  /**
   * Indicates that the component is operating as intended.
   *
   * @generated from enum value: HEALTH_STATUS_HEALTHY = 1;
   */
  HEALTHY = 1,

  /**
   * Indicates that the component is at risk of transitioning into a HEALTH_STATUS_FAIL
   * state or that the component is operating in a degraded state.
   *
   * @generated from enum value: HEALTH_STATUS_WARN = 2;
   */
  WARN = 2,

  /**
   * Indicates that the component is not functioning as intended.
   *
   * @generated from enum value: HEALTH_STATUS_FAIL = 3;
   */
  FAIL = 3,

  /**
   * Indicates that the component is offline.
   *
   * @generated from enum value: HEALTH_STATUS_OFFLINE = 4;
   */
  OFFLINE = 4,

  /**
   * Indicates that the component is not yet functioning, but it is transitioning into a
   * HEALTH_STATUS_HEALTHY state. A component should only report this state temporarily.
   *
   * @generated from enum value: HEALTH_STATUS_NOT_READY = 5;
   */
  NOT_READY = 5,
}

/**
 * Describes the enum anduril.entitymanager.v1.HealthStatus.
 */
export declare const HealthStatusSchema: GenEnum<HealthStatus>;

