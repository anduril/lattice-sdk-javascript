// @generated by protoc-gen-es v1.7.2 with parameter "target=ts"
// @generated from file anduril/entitymanager/v1/prototype.pub.proto (package anduril.entitymanager.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message anduril.entitymanager.v1.PrototypeExtensions
 */
export class PrototypeExtensions extends Message<PrototypeExtensions> {
  /**
   * @generated from field: map<string, google.protobuf.Any> extensions = 1;
   */
  extensions: { [key: string]: Any } = {};

  constructor(data?: PartialMessage<PrototypeExtensions>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "anduril.entitymanager.v1.PrototypeExtensions";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "extensions", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: Any} },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PrototypeExtensions {
    return new PrototypeExtensions().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PrototypeExtensions {
    return new PrototypeExtensions().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PrototypeExtensions {
    return new PrototypeExtensions().fromJsonString(jsonString, options);
  }

  static equals(a: PrototypeExtensions | PlainMessage<PrototypeExtensions> | undefined, b: PrototypeExtensions | PlainMessage<PrototypeExtensions> | undefined): boolean {
    return proto3.util.equals(PrototypeExtensions, a, b);
  }
}

