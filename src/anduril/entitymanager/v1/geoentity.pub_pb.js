// @generated by protoc-gen-es v2.0.0
// @generated from file anduril/entitymanager/v1/geoentity.pub.proto (package anduril.entitymanager.v1, syntax proto3)
/* eslint-disable */

import { enumDesc, fileDesc, messageDesc, tsEnum } from "@bufbuild/protobuf/codegenv1";
import { file_anduril_entitymanager_v1_location_pub } from "./location.pub_pb";
import { file_anduril_type_color_pub } from "../../type/color.pub_pb";
import { file_google_protobuf_wrappers } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file anduril/entitymanager/v1/geoentity.pub.proto.
 */
export const file_anduril_entitymanager_v1_geoentity_pub = /*@__PURE__*/
  fileDesc("", [file_anduril_entitymanager_v1_location_pub, file_anduril_type_color_pub, file_google_protobuf_wrappers]);

/**
 * Describes the message anduril.entitymanager.v1.GeoDetails.
 * Use `create(GeoDetailsSchema)` to create a new message.
 */
export const GeoDetailsSchema = /*@__PURE__*/
  messageDesc(file_anduril_entitymanager_v1_geoentity_pub, 0);

/**
 * Describes the message anduril.entitymanager.v1.EmergencyDetails.
 * Use `create(EmergencyDetailsSchema)` to create a new message.
 */
export const EmergencyDetailsSchema = /*@__PURE__*/
  messageDesc(file_anduril_entitymanager_v1_geoentity_pub, 1);

/**
 * Describes the message anduril.entitymanager.v1.GeoShape.
 * Use `create(GeoShapeSchema)` to create a new message.
 */
export const GeoShapeSchema = /*@__PURE__*/
  messageDesc(file_anduril_entitymanager_v1_geoentity_pub, 2);

/**
 * Describes the message anduril.entitymanager.v1.GeoPoint.
 * Use `create(GeoPointSchema)` to create a new message.
 */
export const GeoPointSchema = /*@__PURE__*/
  messageDesc(file_anduril_entitymanager_v1_geoentity_pub, 3);

/**
 * Describes the message anduril.entitymanager.v1.GeoLine.
 * Use `create(GeoLineSchema)` to create a new message.
 */
export const GeoLineSchema = /*@__PURE__*/
  messageDesc(file_anduril_entitymanager_v1_geoentity_pub, 4);

/**
 * Describes the message anduril.entitymanager.v1.GeoPolygon.
 * Use `create(GeoPolygonSchema)` to create a new message.
 */
export const GeoPolygonSchema = /*@__PURE__*/
  messageDesc(file_anduril_entitymanager_v1_geoentity_pub, 5);

/**
 * Describes the message anduril.entitymanager.v1.GeoEllipse.
 * Use `create(GeoEllipseSchema)` to create a new message.
 */
export const GeoEllipseSchema = /*@__PURE__*/
  messageDesc(file_anduril_entitymanager_v1_geoentity_pub, 6);

/**
 * Describes the message anduril.entitymanager.v1.GeoEllipsoid.
 * Use `create(GeoEllipsoidSchema)` to create a new message.
 */
export const GeoEllipsoidSchema = /*@__PURE__*/
  messageDesc(file_anduril_entitymanager_v1_geoentity_pub, 7);

/**
 * Describes the message anduril.entitymanager.v1.LinearRing.
 * Use `create(LinearRingSchema)` to create a new message.
 */
export const LinearRingSchema = /*@__PURE__*/
  messageDesc(file_anduril_entitymanager_v1_geoentity_pub, 8);

/**
 * Describes the message anduril.entitymanager.v1.GeoPolygonPosition.
 * Use `create(GeoPolygonPositionSchema)` to create a new message.
 */
export const GeoPolygonPositionSchema = /*@__PURE__*/
  messageDesc(file_anduril_entitymanager_v1_geoentity_pub, 9);

/**
 * Describes the message anduril.entitymanager.v1.GeoVisualDetails.
 * Use `create(GeoVisualDetailsSchema)` to create a new message.
 */
export const GeoVisualDetailsSchema = /*@__PURE__*/
  messageDesc(file_anduril_entitymanager_v1_geoentity_pub, 10);

/**
 * Describes the message anduril.entitymanager.v1.FSCMDetails.
 * Use `create(FSCMDetailsSchema)` to create a new message.
 */
export const FSCMDetailsSchema = /*@__PURE__*/
  messageDesc(file_anduril_entitymanager_v1_geoentity_pub, 11);

/**
 * Describes the message anduril.entitymanager.v1.ACMDetails.
 * Use `create(ACMDetailsSchema)` to create a new message.
 */
export const ACMDetailsSchema = /*@__PURE__*/
  messageDesc(file_anduril_entitymanager_v1_geoentity_pub, 12);

/**
 * Describes the message anduril.entitymanager.v1.MCMDetails.
 * Use `create(MCMDetailsSchema)` to create a new message.
 */
export const MCMDetailsSchema = /*@__PURE__*/
  messageDesc(file_anduril_entitymanager_v1_geoentity_pub, 13);

/**
 * Describes the message anduril.entitymanager.v1.FiringAuthority.
 * Use `create(FiringAuthoritySchema)` to create a new message.
 */
export const FiringAuthoritySchema = /*@__PURE__*/
  messageDesc(file_anduril_entitymanager_v1_geoentity_pub, 14);

/**
 * Describes the message anduril.entitymanager.v1.ControlAreaDetails.
 * Use `create(ControlAreaDetailsSchema)` to create a new message.
 */
export const ControlAreaDetailsSchema = /*@__PURE__*/
  messageDesc(file_anduril_entitymanager_v1_geoentity_pub, 15);

/**
 * Describes the enum anduril.entitymanager.v1.GeoType.
 */
export const GeoTypeSchema = /*@__PURE__*/
  enumDesc(file_anduril_entitymanager_v1_geoentity_pub, 0);

/**
 * The type of geo entity.
 *
 * @generated from enum anduril.entitymanager.v1.GeoType
 */
export const GeoType = /*@__PURE__*/
  tsEnum(GeoTypeSchema);

/**
 * Describes the enum anduril.entitymanager.v1.EmergencyType.
 */
export const EmergencyTypeSchema = /*@__PURE__*/
  enumDesc(file_anduril_entitymanager_v1_geoentity_pub, 1);

/**
 * Type of an emergency.
 *
 * @generated from enum anduril.entitymanager.v1.EmergencyType
 */
export const EmergencyType = /*@__PURE__*/
  tsEnum(EmergencyTypeSchema);

/**
 * Describes the enum anduril.entitymanager.v1.ControlAreaType.
 */
export const ControlAreaTypeSchema = /*@__PURE__*/
  enumDesc(file_anduril_entitymanager_v1_geoentity_pub, 2);

/**
 * @generated from enum anduril.entitymanager.v1.ControlAreaType
 */
export const ControlAreaType = /*@__PURE__*/
  tsEnum(ControlAreaTypeSchema);

/**
 * Describes the enum anduril.entitymanager.v1.FSCMDetailType.
 */
export const FSCMDetailTypeSchema = /*@__PURE__*/
  enumDesc(file_anduril_entitymanager_v1_geoentity_pub, 3);

/**
 * @generated from enum anduril.entitymanager.v1.FSCMDetailType
 */
export const FSCMDetailType = /*@__PURE__*/
  tsEnum(FSCMDetailTypeSchema);

/**
 * Describes the enum anduril.entitymanager.v1.ACMDetailType.
 */
export const ACMDetailTypeSchema = /*@__PURE__*/
  enumDesc(file_anduril_entitymanager_v1_geoentity_pub, 4);

/**
 * @generated from enum anduril.entitymanager.v1.ACMDetailType
 */
export const ACMDetailType = /*@__PURE__*/
  tsEnum(ACMDetailTypeSchema);

/**
 * Describes the enum anduril.entitymanager.v1.AmmoRestrictionType.
 */
export const AmmoRestrictionTypeSchema = /*@__PURE__*/
  enumDesc(file_anduril_entitymanager_v1_geoentity_pub, 5);

/**
 * @generated from enum anduril.entitymanager.v1.AmmoRestrictionType
 */
export const AmmoRestrictionType = /*@__PURE__*/
  tsEnum(AmmoRestrictionTypeSchema);

/**
 * Describes the enum anduril.entitymanager.v1.RestrictiveMeasureType.
 */
export const RestrictiveMeasureTypeSchema = /*@__PURE__*/
  enumDesc(file_anduril_entitymanager_v1_geoentity_pub, 6);

/**
 * @generated from enum anduril.entitymanager.v1.RestrictiveMeasureType
 */
export const RestrictiveMeasureType = /*@__PURE__*/
  tsEnum(RestrictiveMeasureTypeSchema);

/**
 * Describes the enum anduril.entitymanager.v1.MCMDetailType.
 */
export const MCMDetailTypeSchema = /*@__PURE__*/
  enumDesc(file_anduril_entitymanager_v1_geoentity_pub, 7);

/**
 * @generated from enum anduril.entitymanager.v1.MCMDetailType
 */
export const MCMDetailType = /*@__PURE__*/
  tsEnum(MCMDetailTypeSchema);

