// @generated by protoc-gen-es v1.7.2 with parameter "target=ts"
// @generated from file anduril/entitymanager/v1/route_details.pub.proto (package anduril.entitymanager.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Timestamp } from "@bufbuild/protobuf";

/**
 * @generated from message anduril.entitymanager.v1.RouteDetails
 */
export class RouteDetails extends Message<RouteDetails> {
  /**
   * Free form text giving the name of the entity's destination
   *
   * @generated from field: string destination_name = 1;
   */
  destinationName = "";

  /**
   * Estimated time of arrival at destination
   *
   * @generated from field: google.protobuf.Timestamp estimated_arrival_time = 2;
   */
  estimatedArrivalTime?: Timestamp;

  constructor(data?: PartialMessage<RouteDetails>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "anduril.entitymanager.v1.RouteDetails";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "destination_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "estimated_arrival_time", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RouteDetails {
    return new RouteDetails().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RouteDetails {
    return new RouteDetails().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RouteDetails {
    return new RouteDetails().fromJsonString(jsonString, options);
  }

  static equals(a: RouteDetails | PlainMessage<RouteDetails> | undefined, b: RouteDetails | PlainMessage<RouteDetails> | undefined): boolean {
    return proto3.util.equals(RouteDetails, a, b);
  }
}

