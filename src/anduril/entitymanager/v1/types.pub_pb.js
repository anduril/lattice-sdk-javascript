// @generated by protoc-gen-es v1.7.2
// @generated from file anduril/entitymanager/v1/types.pub.proto (package anduril.entitymanager.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";

/**
 * The type of alternate id.
 *
 * @generated from enum anduril.entitymanager.v1.AltIdType
 */
export const AltIdType = proto3.makeEnum(
  "anduril.entitymanager.v1.AltIdType",
  [
    {no: 0, name: "ALT_ID_TYPE_INVALID", localName: "INVALID"},
    {no: 1, name: "ALT_ID_TYPE_TRACK_ID_2", localName: "TRACK_ID_2"},
    {no: 12, name: "ALT_ID_TYPE_TRACK_ID_1", localName: "TRACK_ID_1"},
    {no: 2, name: "ALT_ID_TYPE_SPI_ID", localName: "SPI_ID"},
    {no: 3, name: "ALT_ID_TYPE_NITF_FILE_TITLE", localName: "NITF_FILE_TITLE"},
    {no: 4, name: "ALT_ID_TYPE_TRACK_REPO_ALERT_ID", localName: "TRACK_REPO_ALERT_ID"},
    {no: 5, name: "ALT_ID_TYPE_ASSET_ID", localName: "ASSET_ID"},
    {no: 6, name: "ALT_ID_TYPE_LINK16_TRACK_NUMBER", localName: "LINK16_TRACK_NUMBER"},
    {no: 7, name: "ALT_ID_TYPE_LINK16_JU", localName: "LINK16_JU"},
    {no: 8, name: "ALT_ID_TYPE_NCCT_MESSAGE_ID", localName: "NCCT_MESSAGE_ID"},
    {no: 9, name: "ALT_ID_TYPE_CALLSIGN", localName: "CALLSIGN"},
    {no: 10, name: "ALT_ID_TYPE_MMSI_ID", localName: "MMSI_ID"},
    {no: 11, name: "ALT_ID_TYPE_VMF_URN", localName: "VMF_URN"},
    {no: 13, name: "ALT_ID_TYPE_IMO_ID", localName: "IMO_ID"},
    {no: 14, name: "ALT_ID_TYPE_VMF_TARGET_NUMBER", localName: "VMF_TARGET_NUMBER"},
    {no: 15, name: "ALT_ID_TYPE_SERIAL_NUMBER", localName: "SERIAL_NUMBER"},
    {no: 16, name: "ALT_ID_TYPE_REGISTRATION_ID", localName: "REGISTRATION_ID"},
    {no: 17, name: "ALT_ID_TYPE_IBS_GID", localName: "IBS_GID"},
    {no: 18, name: "ALT_ID_TYPE_DODAAC", localName: "DODAAC"},
    {no: 19, name: "ALT_ID_TYPE_UIC", localName: "UIC"},
    {no: 20, name: "ALT_ID_TYPE_NORAD_CAT_ID", localName: "NORAD_CAT_ID"},
  ],
);

/**
 * Set of possible templates used when creating an entity.
 * This impacts minimum required component sets and can be used by edge systems that need to distinguish.
 *
 * @generated from enum anduril.entitymanager.v1.Template
 */
export const Template = proto3.makeEnum(
  "anduril.entitymanager.v1.Template",
  [
    {no: 0, name: "TEMPLATE_INVALID", localName: "INVALID"},
    {no: 1, name: "TEMPLATE_TRACK", localName: "TRACK"},
    {no: 2, name: "TEMPLATE_SENSOR_POINT_OF_INTEREST", localName: "SENSOR_POINT_OF_INTEREST"},
    {no: 3, name: "TEMPLATE_ASSET", localName: "ASSET"},
    {no: 4, name: "TEMPLATE_GEO", localName: "GEO"},
    {no: 5, name: "TEMPLATE_SIGNAL_OF_INTEREST", localName: "SIGNAL_OF_INTEREST"},
  ],
);

/**
 * The source (provenance) of data.
 *
 * @generated from enum anduril.entitymanager.v1.Source
 */
export const Source = proto3.makeEnum(
  "anduril.entitymanager.v1.Source",
  [
    {no: 0, name: "SOURCE_INVALID", localName: "INVALID"},
    {no: 1, name: "SOURCE_ANDURIL", localName: "ANDURIL"},
    {no: 2, name: "SOURCE_LINK_16", localName: "LINK_16"},
    {no: 3, name: "SOURCE_VMF", localName: "VMF"},
    {no: 4, name: "SOURCE_ADSB", localName: "ADSB"},
    {no: 5, name: "SOURCE_CURSOR_ON_TARGET", localName: "CURSOR_ON_TARGET"},
    {no: 6, name: "SOURCE_MAXAR", localName: "MAXAR"},
    {no: 7, name: "SOURCE_MARTAC", localName: "MARTAC"},
    {no: 8, name: "SOURCE_SAILDRONE", localName: "SAILDRONE"},
    {no: 9, name: "SOURCE_HE_360", localName: "HE_360"},
    {no: 10, name: "SOURCE_OFX", localName: "OFX"},
    {no: 11, name: "SOURCE_BAS_T", localName: "BAS_T"},
    {no: 12, name: "SOURCE_KINETICA", localName: "KINETICA"},
    {no: 13, name: "SOURCE_USER", localName: "USER"},
    {no: 14, name: "SOURCE_NCCT", localName: "NCCT"},
    {no: 15, name: "SOURCE_AIS", localName: "AIS"},
    {no: 16, name: "SOURCE_KLV", localName: "KLV"},
    {no: 17, name: "SOURCE_NITF", localName: "NITF"},
    {no: 18, name: "SOURCE_TAK", localName: "TAK"},
    {no: 19, name: "SOURCE_SPIRE_AIS", localName: "SPIRE_AIS"},
    {no: 20, name: "SOURCE_SEFI", localName: "SEFI"},
    {no: 21, name: "SOURCE_ADSB_EXCHANGE", localName: "ADSB_EXCHANGE"},
    {no: 22, name: "SOURCE_LIVE_UA_MAP", localName: "LIVE_UA_MAP"},
    {no: 23, name: "SOURCE_CRUCIBLE", localName: "CRUCIBLE"},
    {no: 24, name: "SOURCE_IBS", localName: "IBS"},
    {no: 25, name: "SOURCE_ADVANA", localName: "ADVANA"},
    {no: 26, name: "SOURCE_THRESHER", localName: "THRESHER"},
    {no: 27, name: "SOURCE_SEATRACKS", localName: "SEATRACKS"},
    {no: 28, name: "SOURCE_TASS", localName: "TASS"},
    {no: 30, name: "SOURCE_SMART_SENSOR", localName: "SMART_SENSOR"},
    {no: 31, name: "SOURCE_STRIVEWORKS", localName: "STRIVEWORKS"},
    {no: 32, name: "SOURCE_L3H_THEIA", localName: "L3H_THEIA"},
    {no: 33, name: "SOURCE_TALON_POWDERHORN", localName: "TALON_POWDERHORN"},
    {no: 34, name: "SOURCE_IDT_VIRTUAL_TWIN", localName: "IDT_VIRTUAL_TWIN"},
    {no: 35, name: "SOURCE_MISSION_AUTONOMY", localName: "MISSION_AUTONOMY"},
    {no: 36, name: "SOURCE_GCCS", localName: "GCCS"},
    {no: 37, name: "SOURCE_FOUNDRY", localName: "FOUNDRY"},
    {no: 38, name: "SOURCE_MIDB", localName: "MIDB"},
    {no: 39, name: "SOURCE_FOM", localName: "FOM"},
    {no: 40, name: "SOURCE_GALE", localName: "GALE"},
  ],
);

/**
 * The state of an override.
 *
 * @generated from enum anduril.entitymanager.v1.OverrideStatus
 */
export const OverrideStatus = proto3.makeEnum(
  "anduril.entitymanager.v1.OverrideStatus",
  [
    {no: 0, name: "OVERRIDE_STATUS_INVALID", localName: "INVALID"},
    {no: 1, name: "OVERRIDE_STATUS_APPLIED", localName: "APPLIED"},
    {no: 2, name: "OVERRIDE_STATUS_PENDING", localName: "PENDING"},
    {no: 3, name: "OVERRIDE_STATUS_TIMEOUT", localName: "TIMEOUT"},
    {no: 4, name: "OVERRIDE_STATUS_REJECTED", localName: "REJECTED"},
    {no: 5, name: "OVERRIDE_STATUS_DELETION_PENDING", localName: "DELETION_PENDING"},
  ],
);

/**
 * @generated from enum anduril.entitymanager.v1.OverrideType
 */
export const OverrideType = proto3.makeEnum(
  "anduril.entitymanager.v1.OverrideType",
  [
    {no: 0, name: "OVERRIDE_TYPE_INVALID", localName: "INVALID"},
    {no: 1, name: "OVERRIDE_TYPE_LIVE", localName: "LIVE"},
    {no: 2, name: "OVERRIDE_TYPE_POST_EXPIRY", localName: "POST_EXPIRY"},
  ],
);

/**
 * @generated from message anduril.entitymanager.v1.UInt32Range
 */
export const UInt32Range = proto3.makeMessageType(
  "anduril.entitymanager.v1.UInt32Range",
  () => [
    { no: 1, name: "lower_bound", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "upper_bound", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ],
);

/**
 * @generated from message anduril.entitymanager.v1.FloatRange
 */
export const FloatRange = proto3.makeMessageType(
  "anduril.entitymanager.v1.FloatRange",
  () => [
    { no: 1, name: "lower_bound", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 2, name: "upper_bound", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
  ],
);

