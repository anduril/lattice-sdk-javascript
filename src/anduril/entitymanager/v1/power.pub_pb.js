// @generated by protoc-gen-es v1.7.2 with parameter "js_import_style=legacy_commonjs"
// @generated from file anduril/entitymanager/v1/power.pub.proto (package anduril.entitymanager.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

const { BoolValue, DoubleValue, proto3 } = require("@bufbuild/protobuf");

/**
 * @generated from enum anduril.entitymanager.v1.PowerStatus
 */
const PowerStatus = proto3.makeEnum(
  "anduril.entitymanager.v1.PowerStatus",
  [
    {no: 0, name: "POWER_STATUS_INVALID", localName: "INVALID"},
    {no: 1, name: "POWER_STATUS_UNKNOWN", localName: "UNKNOWN"},
    {no: 2, name: "POWER_STATUS_NOT_PRESENT", localName: "NOT_PRESENT"},
    {no: 3, name: "POWER_STATUS_OPERATING", localName: "OPERATING"},
    {no: 4, name: "POWER_STATUS_DISABLED", localName: "DISABLED"},
    {no: 5, name: "POWER_STATUS_ERROR", localName: "ERROR"},
  ],
);

/**
 * @generated from enum anduril.entitymanager.v1.PowerType
 */
const PowerType = proto3.makeEnum(
  "anduril.entitymanager.v1.PowerType",
  [
    {no: 0, name: "POWER_TYPE_INVALID", localName: "INVALID"},
    {no: 1, name: "POWER_TYPE_UNKNOWN", localName: "UNKNOWN"},
    {no: 2, name: "POWER_TYPE_GAS", localName: "GAS"},
    {no: 3, name: "POWER_TYPE_BATTERY", localName: "BATTERY"},
  ],
);

/**
 * Represents the state of power sources connected to this entity.
 *
 * @generated from message anduril.entitymanager.v1.PowerState
 */
const PowerState = proto3.makeMessageType(
  "anduril.entitymanager.v1.PowerState",
  () => [
    { no: 5, name: "source_id_to_state", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: PowerSource} },
    { no: 1, name: "power_status", kind: "enum", T: proto3.getEnumType(PowerStatus) },
    { no: 2, name: "power_type", kind: "enum", T: proto3.getEnumType(PowerType) },
    { no: 3, name: "power_level", kind: "message", T: PowerLevel },
    { no: 4, name: "messages", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
);

/**
 * Represents the state of a single power source that is connected to this entity.
 *
 * @generated from message anduril.entitymanager.v1.PowerSource
 */
const PowerSource = proto3.makeMessageType(
  "anduril.entitymanager.v1.PowerSource",
  () => [
    { no: 1, name: "power_status", kind: "enum", T: proto3.getEnumType(PowerStatus) },
    { no: 2, name: "power_type", kind: "enum", T: proto3.getEnumType(PowerType) },
    { no: 3, name: "power_level", kind: "message", T: PowerLevel },
    { no: 4, name: "messages", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 5, name: "offloadable", kind: "message", T: BoolValue },
  ],
);

/**
 * Represents the power level of a system.
 *
 * @generated from message anduril.entitymanager.v1.PowerLevel
 */
const PowerLevel = proto3.makeMessageType(
  "anduril.entitymanager.v1.PowerLevel",
  () => [
    { no: 1, name: "capacity", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 2, name: "remaining", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 3, name: "percent_remaining", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 4, name: "voltage", kind: "message", T: DoubleValue },
    { no: 5, name: "current_amps", kind: "message", T: DoubleValue },
    { no: 6, name: "run_time_to_empty_mins", kind: "message", T: DoubleValue },
    { no: 7, name: "consumption_rate_l_per_s", kind: "message", T: DoubleValue },
  ],
);


exports.PowerStatus = PowerStatus;
exports.PowerType = PowerType;
exports.PowerState = PowerState;
exports.PowerSource = PowerSource;
exports.PowerLevel = PowerLevel;
