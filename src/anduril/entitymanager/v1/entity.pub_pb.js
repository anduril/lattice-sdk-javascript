// @generated by protoc-gen-es v2.2.0
// @generated from file anduril/entitymanager/v1/entity.pub.proto (package anduril.entitymanager.v1, syntax proto3)
/* eslint-disable */

import { enumDesc, fileDesc, messageDesc, tsEnum } from "@bufbuild/protobuf/codegenv1";
import { file_anduril_entitymanager_v1_classification_pub } from "./classification.pub_pb";
import { file_anduril_entitymanager_v1_dimensions_pub } from "./dimensions.pub_pb";
import { file_anduril_entitymanager_v1_geoentity_pub } from "./geoentity.pub_pb";
import { file_anduril_entitymanager_v1_group_pub } from "./group.pub_pb";
import { file_anduril_entitymanager_v1_health_status_pub } from "./health_status.pub_pb";
import { file_anduril_entitymanager_v1_location_pub } from "./location.pub_pb";
import { file_anduril_entitymanager_v1_ontology_pub } from "./ontology.pub_pb";
import { file_anduril_entitymanager_v1_options_pub } from "./options.pub_pb";
import { file_anduril_entitymanager_v1_orbit_pub } from "./orbit.pub_pb";
import { file_anduril_entitymanager_v1_payloads_pub } from "./payloads.pub_pb";
import { file_anduril_entitymanager_v1_power_pub } from "./power.pub_pb";
import { file_anduril_entitymanager_v1_relationship_pub } from "./relationship.pub_pb";
import { file_anduril_entitymanager_v1_route_details_pub } from "./route_details.pub_pb";
import { file_anduril_entitymanager_v1_schedule_pub } from "./schedule.pub_pb";
import { file_anduril_entitymanager_v1_sensors_pub } from "./sensors.pub_pb";
import { file_anduril_entitymanager_v1_signal_pub } from "./signal.pub_pb";
import { file_anduril_entitymanager_v1_supplies_pub } from "./supplies.pub_pb";
import { file_anduril_entitymanager_v1_target_priority_pub } from "./target_priority.pub_pb";
import { file_anduril_entitymanager_v1_transponder_codes_pub } from "./transponder_codes.pub_pb";
import { file_anduril_entitymanager_v1_types_pub } from "./types.pub_pb";
import { file_anduril_tasks_v2_catalog_pub } from "../../tasks/v2/catalog.pub_pb";
import { file_anduril_type_color_pub } from "../../type/color.pub_pb";
import { file_google_protobuf_timestamp, file_google_protobuf_wrappers } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file anduril/entitymanager/v1/entity.pub.proto.
 */
export const file_anduril_entitymanager_v1_entity_pub = /*@__PURE__*/
  fileDesc("CilhbmR1cmlsL2VudGl0eW1hbmFnZXIvdjEvZW50aXR5LnB1Yi5wcm90bxIYYW5kdXJpbC5lbnRpdHltYW5hZ2VyLnYxIvEPCgZFbnRpdHkSEQoJZW50aXR5X2lkGAEgASgJEhMKC2Rlc2NyaXB0aW9uGAIgASgJEg8KB2lzX2xpdmUYAyABKAgSMAoMY3JlYXRlZF90aW1lGAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIvCgtleHBpcnlfdGltZRgFIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASMAoGc3RhdHVzGBMgASgLMiAuYW5kdXJpbC5lbnRpdHltYW5hZ2VyLnYxLlN0YXR1cxI0Cghsb2NhdGlvbhgGIAEoCzIiLmFuZHVyaWwuZW50aXR5bWFuYWdlci52MS5Mb2NhdGlvbhJLChRsb2NhdGlvbl91bmNlcnRhaW50eRgPIAEoCzItLmFuZHVyaWwuZW50aXR5bWFuYWdlci52MS5Mb2NhdGlvblVuY2VydGFpbnR5EjUKCWdlb19zaGFwZRgXIAEoCzIiLmFuZHVyaWwuZW50aXR5bWFuYWdlci52MS5HZW9TaGFwZRI5CgtnZW9fZGV0YWlscxgYIAEoCzIkLmFuZHVyaWwuZW50aXR5bWFuYWdlci52MS5HZW9EZXRhaWxzEjIKB2FsaWFzZXMYByABKAsyIS5hbmR1cmlsLmVudGl0eW1hbmFnZXIudjEuQWxpYXNlcxIyCgd0cmFja2VkGAggASgLMiEuYW5kdXJpbC5lbnRpdHltYW5hZ2VyLnYxLlRyYWNrZWQSOgoLY29ycmVsYXRpb24YLyABKAsyJS5hbmR1cmlsLmVudGl0eW1hbmFnZXIudjEuQ29ycmVsYXRpb24SMwoIbWlsX3ZpZXcYCiABKAsyIS5hbmR1cmlsLmVudGl0eW1hbmFnZXIudjEuTWlsVmlldxI0CghvbnRvbG9neRgLIAEoCzIiLmFuZHVyaWwuZW50aXR5bWFuYWdlci52MS5PbnRvbG9neRIyCgdzZW5zb3JzGBQgASgLMiEuYW5kdXJpbC5lbnRpdHltYW5hZ2VyLnYxLlNlbnNvcnMSNAoIcGF5bG9hZHMYFSABKAsyIi5hbmR1cmlsLmVudGl0eW1hbmFnZXIudjEuUGF5bG9hZHMSOQoLcG93ZXJfc3RhdGUYHiABKAsyJC5hbmR1cmlsLmVudGl0eW1hbmFnZXIudjEuUG93ZXJTdGF0ZRI4Cgpwcm92ZW5hbmNlGAwgASgLMiQuYW5kdXJpbC5lbnRpdHltYW5hZ2VyLnYxLlByb3ZlbmFuY2USNgoJb3ZlcnJpZGVzGA0gASgLMiMuYW5kdXJpbC5lbnRpdHltYW5hZ2VyLnYxLk92ZXJyaWRlcxI4CgppbmRpY2F0b3JzGA4gASgLMiQuYW5kdXJpbC5lbnRpdHltYW5hZ2VyLnYxLkluZGljYXRvcnMSQQoPdGFyZ2V0X3ByaW9yaXR5GBYgASgLMiguYW5kdXJpbC5lbnRpdHltYW5hZ2VyLnYxLlRhcmdldFByaW9yaXR5EjAKBnNpZ25hbBgZIAEoCzIgLmFuZHVyaWwuZW50aXR5bWFuYWdlci52MS5TaWduYWwSRQoRdHJhbnNwb25kZXJfY29kZXMYGiABKAsyKi5hbmR1cmlsLmVudGl0eW1hbmFnZXIudjEuVHJhbnNwb25kZXJDb2RlcxJFChNkYXRhX2NsYXNzaWZpY2F0aW9uGB0gASgLMiguYW5kdXJpbC5lbnRpdHltYW5hZ2VyLnYxLkNsYXNzaWZpY2F0aW9uEjMKDHRhc2tfY2F0YWxvZxgfIAEoCzIdLmFuZHVyaWwudGFza3MudjIuVGFza0NhdGFsb2cSPgoNcmVsYXRpb25zaGlwcxghIAEoCzInLmFuZHVyaWwuZW50aXR5bWFuYWdlci52MS5SZWxhdGlvbnNoaXBzEj8KDnZpc3VhbF9kZXRhaWxzGCIgASgLMicuYW5kdXJpbC5lbnRpdHltYW5hZ2VyLnYxLlZpc3VhbERldGFpbHMSOAoKZGltZW5zaW9ucxgkIAEoCzIkLmFuZHVyaWwuZW50aXR5bWFuYWdlci52MS5EaW1lbnNpb25zEj0KDXJvdXRlX2RldGFpbHMYJSABKAsyJi5hbmR1cmlsLmVudGl0eW1hbmFnZXIudjEuUm91dGVEZXRhaWxzEjYKCXNjaGVkdWxlcxgmIAEoCzIjLmFuZHVyaWwuZW50aXR5bWFuYWdlci52MS5TY2hlZHVsZXMSMAoGaGVhbHRoGCcgASgLMiAuYW5kdXJpbC5lbnRpdHltYW5hZ2VyLnYxLkhlYWx0aBI9Cg1ncm91cF9kZXRhaWxzGCggASgLMiYuYW5kdXJpbC5lbnRpdHltYW5hZ2VyLnYxLkdyb3VwRGV0YWlscxI0CghzdXBwbGllcxgqIAEoCzIiLmFuZHVyaWwuZW50aXR5bWFuYWdlci52MS5TdXBwbGllcxIuCgVvcmJpdBguIAEoCzIfLmFuZHVyaWwuZW50aXR5bWFuYWdlci52MS5PcmJpdEoECAkQCkoECBAQEUoECBEQEkoECBIQE0oECBsQHEoECBwQHUoECCAQIUoECCkQKkoECCsQLFIKY29ycmVsYXRlZFINb3JpZ2luYWxfZGF0YVIKZ2VvcG9seWdvblIFbWVkaWFSB2NvbnRhY3RSC3RlYW1fc3RhdHVzUglub19leHBpcnkiMQoGU3RhdHVzEhkKEXBsYXRmb3JtX2FjdGl2aXR5GAEgASgJEgwKBHJvbGUYAiABKAkiXwoHQWxpYXNlcxJBCg1hbHRlcm5hdGVfaWRzGAEgAygLMiUuYW5kdXJpbC5lbnRpdHltYW5hZ2VyLnYxLkFsdGVybmF0ZUlkQgPIPgESEQoEbmFtZRgCIAEoCUIDyD4BIrUDCgdUcmFja2VkEjoKFXRyYWNrX3F1YWxpdHlfd3JhcHBlchgCIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlEjAKC3NlbnNvcl9oaXRzGAMgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUSQAoRbnVtYmVyX29mX29iamVjdHMYBCABKAsyJS5hbmR1cmlsLmVudGl0eW1hbmFnZXIudjEuVUludDMyUmFuZ2USOQoTcmFkYXJfY3Jvc3Nfc2VjdGlvbhgGIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5Eb3VibGVWYWx1ZRI5ChVsYXN0X21lYXN1cmVtZW50X3RpbWUYByABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEkAKD2xpbmVfb2ZfYmVhcmluZxgJIAEoCzInLmFuZHVyaWwuZW50aXR5bWFuYWdlci52MS5MaW5lT2ZCZWFyaW5nSgQIARACSgQIBRAGSgQICBAJUg10cmFja19xdWFsaXR5Ug5zZW5zb3JfZGV0YWlsc1IRcmVsYXRpdmVfcG9zaXRpb24i0gEKClByb3ZlbmFuY2USGAoQaW50ZWdyYXRpb25fbmFtZRgFIAEoCRIRCglkYXRhX3R5cGUYBiABKAkSMAoGc291cmNlGAEgASgOMiAuYW5kdXJpbC5lbnRpdHltYW5hZ2VyLnYxLlNvdXJjZRIRCglzb3VyY2VfaWQYAyABKAkSNgoSc291cmNlX3VwZGF0ZV90aW1lGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIaChJzb3VyY2VfZGVzY3JpcHRpb24YBCABKAkiuAIKCkluZGljYXRvcnMSLQoJc2ltdWxhdGVkGAEgASgLMhouZ29vZ2xlLnByb3RvYnVmLkJvb2xWYWx1ZRIsCghleGVyY2lzZRgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5Cb29sVmFsdWUSLQoJZW1lcmdlbmN5GAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLkJvb2xWYWx1ZRImCgJjMhgEIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5Cb29sVmFsdWUSMwoKZWdyZXNzYWJsZRgGIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5Cb29sVmFsdWVCA8g+ARIwCgdzdGFycmVkGAcgASgLMhouZ29vZ2xlLnByb3RvYnVmLkJvb2xWYWx1ZUIDyD4BSgQIBRAGUglkZWxldGFibGUiUwoJT3ZlcnJpZGVzEjQKCG92ZXJyaWRlGAIgAygLMiIuYW5kdXJpbC5lbnRpdHltYW5hZ2VyLnYxLk92ZXJyaWRlSgQIARACUgpwcm92ZW5hbmNlItECCghPdmVycmlkZRISCgpyZXF1ZXN0X2lkGAEgASgJEhIKCmZpZWxkX3BhdGgYAiABKAkSPAoSbWFza2VkX2ZpZWxkX3ZhbHVlGAMgASgLMiAuYW5kdXJpbC5lbnRpdHltYW5hZ2VyLnYxLkVudGl0eRI4CgZzdGF0dXMYBCABKA4yKC5hbmR1cmlsLmVudGl0eW1hbmFnZXIudjEuT3ZlcnJpZGVTdGF0dXMSOAoKcHJvdmVuYW5jZRgFIAEoCzIkLmFuZHVyaWwuZW50aXR5bWFuYWdlci52MS5Qcm92ZW5hbmNlEjQKBHR5cGUYBiABKA4yJi5hbmR1cmlsLmVudGl0eW1hbmFnZXIudjEuT3ZlcnJpZGVUeXBlEjUKEXJlcXVlc3RfdGltZXN0YW1wGAcgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCJfCgtBbHRlcm5hdGVJZBIKCgJpZBgCIAEoCRI2CgR0eXBlGAMgASgOMiMuYW5kdXJpbC5lbnRpdHltYW5hZ2VyLnYxLkFsdElkVHlwZUID0D4BSgQIARACUgZzb3VyY2UiTwoNVmlzdWFsRGV0YWlscxI+CgtyYW5nZV9yaW5ncxgBIAEoCzIkLmFuZHVyaWwuZW50aXR5bWFuYWdlci52MS5SYW5nZVJpbmdzQgPIPgEiugEKClJhbmdlUmluZ3MSNAoObWluX2Rpc3RhbmNlX20YASABKAsyHC5nb29nbGUucHJvdG9idWYuRG91YmxlVmFsdWUSNAoObWF4X2Rpc3RhbmNlX20YAiABKAsyHC5nb29nbGUucHJvdG9idWYuRG91YmxlVmFsdWUSEgoKcmluZ19jb3VudBgDIAEoDRIsCg9yaW5nX2xpbmVfY29sb3IYBCABKAsyEy5hbmR1cmlsLnR5cGUuQ29sb3Ii4gEKC0NvcnJlbGF0aW9uEj8KB3ByaW1hcnkYASABKAsyLC5hbmR1cmlsLmVudGl0eW1hbmFnZXIudjEuUHJpbWFyeUNvcnJlbGF0aW9uSAASQwoJc2Vjb25kYXJ5GAIgASgLMi4uYW5kdXJpbC5lbnRpdHltYW5hZ2VyLnYxLlNlY29uZGFyeUNvcnJlbGF0aW9uSAASPgoNZGVjb3JyZWxhdGlvbhgDIAEoCzInLmFuZHVyaWwuZW50aXR5bWFuYWdlci52MS5EZWNvcnJlbGF0aW9uQg0KC2NvcnJlbGF0aW9uIjIKElByaW1hcnlDb3JyZWxhdGlvbhIcChRzZWNvbmRhcnlfZW50aXR5X2lkcxgBIAMoCSJyChRTZWNvbmRhcnlDb3JyZWxhdGlvbhIZChFwcmltYXJ5X2VudGl0eV9pZBgBIAEoCRI/CghtZXRhZGF0YRgCIAEoCzItLmFuZHVyaWwuZW50aXR5bWFuYWdlci52MS5Db3JyZWxhdGlvbk1ldGFkYXRhIpQBCg1EZWNvcnJlbGF0aW9uEjYKA2FsbBgBIAEoCzIpLmFuZHVyaWwuZW50aXR5bWFuYWdlci52MS5EZWNvcnJlbGF0ZWRBbGwSSwoVZGVjb3JyZWxhdGVkX2VudGl0aWVzGAIgAygLMiwuYW5kdXJpbC5lbnRpdHltYW5hZ2VyLnYxLkRlY29ycmVsYXRlZFNpbmdsZSJSCg9EZWNvcnJlbGF0ZWRBbGwSPwoIbWV0YWRhdGEYASABKAsyLS5hbmR1cmlsLmVudGl0eW1hbmFnZXIudjEuQ29ycmVsYXRpb25NZXRhZGF0YSJoChJEZWNvcnJlbGF0ZWRTaW5nbGUSEQoJZW50aXR5X2lkGAEgASgJEj8KCG1ldGFkYXRhGAIgASgLMi0uYW5kdXJpbC5lbnRpdHltYW5hZ2VyLnYxLkNvcnJlbGF0aW9uTWV0YWRhdGEi2AEKE0NvcnJlbGF0aW9uTWV0YWRhdGESOAoKcHJvdmVuYW5jZRgBIAEoCzIkLmFuZHVyaWwuZW50aXR5bWFuYWdlci52MS5Qcm92ZW5hbmNlEk4KEHJlcGxpY2F0aW9uX21vZGUYAiABKA4yNC5hbmR1cmlsLmVudGl0eW1hbmFnZXIudjEuQ29ycmVsYXRpb25SZXBsaWNhdGlvbk1vZGUSNwoEdHlwZRgDIAEoDjIpLmFuZHVyaWwuZW50aXR5bWFuYWdlci52MS5Db3JyZWxhdGlvblR5cGUqbAoPQ29ycmVsYXRpb25UeXBlEhwKGENPUlJFTEFUSU9OX1RZUEVfSU5WQUxJRBAAEhsKF0NPUlJFTEFUSU9OX1RZUEVfTUFOVUFMEAESHgoaQ09SUkVMQVRJT05fVFlQRV9BVVRPTUFURUQQAiqXAQoaQ29ycmVsYXRpb25SZXBsaWNhdGlvbk1vZGUSKAokQ09SUkVMQVRJT05fUkVQTElDQVRJT05fTU9ERV9JTlZBTElEEAASJgoiQ09SUkVMQVRJT05fUkVQTElDQVRJT05fTU9ERV9MT0NBTBABEicKI0NPUlJFTEFUSU9OX1JFUExJQ0FUSU9OX01PREVfR0xPQkFMEAJC/wEKHGNvbS5hbmR1cmlsLmVudGl0eW1hbmFnZXIudjFCDkVudGl0eVB1YlByb3RvUAFaTWdoZS5hbmR1cmlsLmRldi9hbmR1cmlsL2FuZHVyaWxhcGlzLWdvL2FuZHVyaWwvZW50aXR5bWFuYWdlci92MTtlbnRpdHltYW5hZ2VyogIDQUVYqgIYQW5kdXJpbC5FbnRpdHltYW5hZ2VyLlYxygIYQW5kdXJpbFxFbnRpdHltYW5hZ2VyXFYx4gIkQW5kdXJpbFxFbnRpdHltYW5hZ2VyXFYxXEdQQk1ldGFkYXRh6gIaQW5kdXJpbDo6RW50aXR5bWFuYWdlcjo6VjFiBnByb3RvMw", [file_anduril_entitymanager_v1_classification_pub, file_anduril_entitymanager_v1_dimensions_pub, file_anduril_entitymanager_v1_geoentity_pub, file_anduril_entitymanager_v1_group_pub, file_anduril_entitymanager_v1_health_status_pub, file_anduril_entitymanager_v1_location_pub, file_anduril_entitymanager_v1_ontology_pub, file_anduril_entitymanager_v1_options_pub, file_anduril_entitymanager_v1_orbit_pub, file_anduril_entitymanager_v1_payloads_pub, file_anduril_entitymanager_v1_power_pub, file_anduril_entitymanager_v1_relationship_pub, file_anduril_entitymanager_v1_route_details_pub, file_anduril_entitymanager_v1_schedule_pub, file_anduril_entitymanager_v1_sensors_pub, file_anduril_entitymanager_v1_signal_pub, file_anduril_entitymanager_v1_supplies_pub, file_anduril_entitymanager_v1_target_priority_pub, file_anduril_entitymanager_v1_transponder_codes_pub, file_anduril_entitymanager_v1_types_pub, file_anduril_tasks_v2_catalog_pub, file_anduril_type_color_pub, file_google_protobuf_timestamp, file_google_protobuf_wrappers]);

/**
 * Describes the message anduril.entitymanager.v1.Entity.
 * Use `create(EntitySchema)` to create a new message.
 */
export const EntitySchema = /*@__PURE__*/
  messageDesc(file_anduril_entitymanager_v1_entity_pub, 0);

/**
 * Describes the message anduril.entitymanager.v1.Status.
 * Use `create(StatusSchema)` to create a new message.
 */
export const StatusSchema = /*@__PURE__*/
  messageDesc(file_anduril_entitymanager_v1_entity_pub, 1);

/**
 * Describes the message anduril.entitymanager.v1.Aliases.
 * Use `create(AliasesSchema)` to create a new message.
 */
export const AliasesSchema = /*@__PURE__*/
  messageDesc(file_anduril_entitymanager_v1_entity_pub, 2);

/**
 * Describes the message anduril.entitymanager.v1.Tracked.
 * Use `create(TrackedSchema)` to create a new message.
 */
export const TrackedSchema = /*@__PURE__*/
  messageDesc(file_anduril_entitymanager_v1_entity_pub, 3);

/**
 * Describes the message anduril.entitymanager.v1.Provenance.
 * Use `create(ProvenanceSchema)` to create a new message.
 */
export const ProvenanceSchema = /*@__PURE__*/
  messageDesc(file_anduril_entitymanager_v1_entity_pub, 4);

/**
 * Describes the message anduril.entitymanager.v1.Indicators.
 * Use `create(IndicatorsSchema)` to create a new message.
 */
export const IndicatorsSchema = /*@__PURE__*/
  messageDesc(file_anduril_entitymanager_v1_entity_pub, 5);

/**
 * Describes the message anduril.entitymanager.v1.Overrides.
 * Use `create(OverridesSchema)` to create a new message.
 */
export const OverridesSchema = /*@__PURE__*/
  messageDesc(file_anduril_entitymanager_v1_entity_pub, 6);

/**
 * Describes the message anduril.entitymanager.v1.Override.
 * Use `create(OverrideSchema)` to create a new message.
 */
export const OverrideSchema = /*@__PURE__*/
  messageDesc(file_anduril_entitymanager_v1_entity_pub, 7);

/**
 * Describes the message anduril.entitymanager.v1.AlternateId.
 * Use `create(AlternateIdSchema)` to create a new message.
 */
export const AlternateIdSchema = /*@__PURE__*/
  messageDesc(file_anduril_entitymanager_v1_entity_pub, 8);

/**
 * Describes the message anduril.entitymanager.v1.VisualDetails.
 * Use `create(VisualDetailsSchema)` to create a new message.
 */
export const VisualDetailsSchema = /*@__PURE__*/
  messageDesc(file_anduril_entitymanager_v1_entity_pub, 9);

/**
 * Describes the message anduril.entitymanager.v1.RangeRings.
 * Use `create(RangeRingsSchema)` to create a new message.
 */
export const RangeRingsSchema = /*@__PURE__*/
  messageDesc(file_anduril_entitymanager_v1_entity_pub, 10);

/**
 * Describes the message anduril.entitymanager.v1.Correlation.
 * Use `create(CorrelationSchema)` to create a new message.
 */
export const CorrelationSchema = /*@__PURE__*/
  messageDesc(file_anduril_entitymanager_v1_entity_pub, 11);

/**
 * Describes the message anduril.entitymanager.v1.PrimaryCorrelation.
 * Use `create(PrimaryCorrelationSchema)` to create a new message.
 */
export const PrimaryCorrelationSchema = /*@__PURE__*/
  messageDesc(file_anduril_entitymanager_v1_entity_pub, 12);

/**
 * Describes the message anduril.entitymanager.v1.SecondaryCorrelation.
 * Use `create(SecondaryCorrelationSchema)` to create a new message.
 */
export const SecondaryCorrelationSchema = /*@__PURE__*/
  messageDesc(file_anduril_entitymanager_v1_entity_pub, 13);

/**
 * Describes the message anduril.entitymanager.v1.Decorrelation.
 * Use `create(DecorrelationSchema)` to create a new message.
 */
export const DecorrelationSchema = /*@__PURE__*/
  messageDesc(file_anduril_entitymanager_v1_entity_pub, 14);

/**
 * Describes the message anduril.entitymanager.v1.DecorrelatedAll.
 * Use `create(DecorrelatedAllSchema)` to create a new message.
 */
export const DecorrelatedAllSchema = /*@__PURE__*/
  messageDesc(file_anduril_entitymanager_v1_entity_pub, 15);

/**
 * Describes the message anduril.entitymanager.v1.DecorrelatedSingle.
 * Use `create(DecorrelatedSingleSchema)` to create a new message.
 */
export const DecorrelatedSingleSchema = /*@__PURE__*/
  messageDesc(file_anduril_entitymanager_v1_entity_pub, 16);

/**
 * Describes the message anduril.entitymanager.v1.CorrelationMetadata.
 * Use `create(CorrelationMetadataSchema)` to create a new message.
 */
export const CorrelationMetadataSchema = /*@__PURE__*/
  messageDesc(file_anduril_entitymanager_v1_entity_pub, 17);

/**
 * Describes the enum anduril.entitymanager.v1.CorrelationType.
 */
export const CorrelationTypeSchema = /*@__PURE__*/
  enumDesc(file_anduril_entitymanager_v1_entity_pub, 0);

/**
 * The type of correlation indicating how it was made.
 *
 * @generated from enum anduril.entitymanager.v1.CorrelationType
 */
export const CorrelationType = /*@__PURE__*/
  tsEnum(CorrelationTypeSchema);

/**
 * Describes the enum anduril.entitymanager.v1.CorrelationReplicationMode.
 */
export const CorrelationReplicationModeSchema = /*@__PURE__*/
  enumDesc(file_anduril_entitymanager_v1_entity_pub, 1);

/**
 * The replication mode of the correlation indicating how the correlation will be replication to
 * other nodes in the mesh.
 *
 * @generated from enum anduril.entitymanager.v1.CorrelationReplicationMode
 */
export const CorrelationReplicationMode = /*@__PURE__*/
  tsEnum(CorrelationReplicationModeSchema);

