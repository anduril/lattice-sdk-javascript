// @generated by protoc-gen-es v1.7.2 with parameter "js_import_style=legacy_commonjs"
// @generated from file anduril/entitymanager/v1/media.pub.proto (package anduril.entitymanager.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum anduril.entitymanager.v1.MediaType
 */
export declare enum MediaType {
  /**
   * @generated from enum value: MEDIA_TYPE_INVALID = 0;
   */
  INVALID = 0,

  /**
   * @generated from enum value: MEDIA_TYPE_THUMBNAIL = 1;
   */
  THUMBNAIL = 1,

  /**
   * @generated from enum value: MEDIA_TYPE_IMAGE = 2;
   */
  IMAGE = 2,

  /**
   * @generated from enum value: MEDIA_TYPE_VIDEO = 3;
   */
  VIDEO = 3,

  /**
   * @generated from enum value: MEDIA_TYPE_SLIPPY_TILES = 4;
   */
  SLIPPY_TILES = 4,
}

/**
 * Media associated with an entity.
 *
 * @generated from message anduril.entitymanager.v1.Media
 */
export declare class Media extends Message<Media> {
  /**
   * @generated from field: repeated anduril.entitymanager.v1.MediaItem media = 1;
   */
  media: MediaItem[];

  constructor(data?: PartialMessage<Media>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "anduril.entitymanager.v1.Media";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Media;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Media;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Media;

  static equals(a: Media | PlainMessage<Media> | undefined, b: Media | PlainMessage<Media> | undefined): boolean;
}

/**
 * @generated from message anduril.entitymanager.v1.MediaItem
 */
export declare class MediaItem extends Message<MediaItem> {
  /**
   * To Be Deprecated, use relative_path.
   * The url where the media related to an entity can be accessed
   *
   * @generated from field: string url = 1;
   */
  url: string;

  /**
   * @generated from field: anduril.entitymanager.v1.MediaType type = 2;
   */
  type: MediaType;

  /**
   * The relative path where the media related to an entity can be accessed when used to query against a blobs service
   * node.
   *
   * @generated from field: string relative_path = 3;
   */
  relativePath: string;

  constructor(data?: PartialMessage<MediaItem>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "anduril.entitymanager.v1.MediaItem";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MediaItem;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MediaItem;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MediaItem;

  static equals(a: MediaItem | PlainMessage<MediaItem> | undefined, b: MediaItem | PlainMessage<MediaItem> | undefined): boolean;
}

