// @generated by protoc-gen-es v2.2.0 with parameter "import_extension=js"
// @generated from file anduril/entitymanager/v1/schedule.pub.proto (package anduril.entitymanager.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file anduril/entitymanager/v1/schedule.pub.proto.
 */
export declare const file_anduril_entitymanager_v1_schedule_pub: GenFile;

/**
 * Schedules associated with this entity
 *
 * @generated from message anduril.entitymanager.v1.Schedules
 */
export declare type Schedules = Message<"anduril.entitymanager.v1.Schedules"> & {
  /**
   * @generated from field: repeated anduril.entitymanager.v1.Schedule schedules = 1;
   */
  schedules: Schedule[];
};

/**
 * Describes the message anduril.entitymanager.v1.Schedules.
 * Use `create(SchedulesSchema)` to create a new message.
 */
export declare const SchedulesSchema: GenMessage<Schedules>;

/**
 * A Schedule associated with this entity
 *
 * @generated from message anduril.entitymanager.v1.Schedule
 */
export declare type Schedule = Message<"anduril.entitymanager.v1.Schedule"> & {
  /**
   * expression that represents this schedule's "ON" state
   *
   * @generated from field: repeated anduril.entitymanager.v1.CronWindow windows = 1;
   */
  windows: CronWindow[];

  /**
   * A unique identifier for this schedule.
   *
   * @generated from field: string schedule_id = 2;
   */
  scheduleId: string;

  /**
   * The schedule type
   *
   * @generated from field: anduril.entitymanager.v1.ScheduleType schedule_type = 3;
   */
  scheduleType: ScheduleType;
};

/**
 * Describes the message anduril.entitymanager.v1.Schedule.
 * Use `create(ScheduleSchema)` to create a new message.
 */
export declare const ScheduleSchema: GenMessage<Schedule>;

/**
 * @generated from message anduril.entitymanager.v1.CronWindow
 */
export declare type CronWindow = Message<"anduril.entitymanager.v1.CronWindow"> & {
  /**
   * in UTC, describes when and at what cadence this window starts, in the quartz flavor of cron
   *
   * examples:
   *    This schedule is begins at 7:00:00am UTC everyday between Monday and Friday
   *        0 0 7 ? * MON-FRI *
   *    This schedule begins every 5 minutes starting at 12:00:00pm UTC until 8:00:00pm UTC everyday
   *        0 0/5 12-20 * * ? *
   *    This schedule begins at 12:00:00pm UTC on March 2nd 2023
   *        0 0 12 2 3 ? 2023
   *
   * @generated from field: string cron_expression = 1;
   */
  cronExpression: string;

  /**
   * describes the duration
   *
   * @generated from field: uint64 duration_millis = 2;
   */
  durationMillis: bigint;
};

/**
 * Describes the message anduril.entitymanager.v1.CronWindow.
 * Use `create(CronWindowSchema)` to create a new message.
 */
export declare const CronWindowSchema: GenMessage<CronWindow>;

/**
 * The type of Schedule.
 *
 * @generated from enum anduril.entitymanager.v1.ScheduleType
 */
export enum ScheduleType {
  /**
   * @generated from enum value: SCHEDULE_TYPE_INVALID = 0;
   */
  INVALID = 0,

  /**
   * @generated from enum value: SCHEDULE_TYPE_ZONE_ENABLED = 1;
   */
  ZONE_ENABLED = 1,

  /**
   * @generated from enum value: SCHEDULE_TYPE_ZONE_TEMP_ENABLED = 2;
   */
  ZONE_TEMP_ENABLED = 2,
}

/**
 * Describes the enum anduril.entitymanager.v1.ScheduleType.
 */
export declare const ScheduleTypeSchema: GenEnum<ScheduleType>;

