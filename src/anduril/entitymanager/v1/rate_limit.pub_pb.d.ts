// @generated by protoc-gen-es v2.2.0 with parameter "import_extension=js"
// @generated from file anduril/entitymanager/v1/rate_limit.pub.proto (package anduril.entitymanager.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file anduril/entitymanager/v1/rate_limit.pub.proto.
 */
export declare const file_anduril_entitymanager_v1_rate_limit_pub: GenFile;

/**
 * rate-limiting / down-sampling parameters.
 *
 * @generated from message anduril.entitymanager.v1.RateLimit
 */
export declare type RateLimit = Message<"anduril.entitymanager.v1.RateLimit"> & {
  /**
   * Specifies a minimum duration in milliseconds after an update for a given entity before another one
   * will be sent for the same entity.
   * A value of 0 is treated as unset. If set, value must be >= 500.
   * Example: if set to 1000, and 4 events occur (ms since start) at T0, T500, T900, T2100, then
   * event from T0 will be sent at T0, T500 will be dropped, T900 will be sent at minimum of T1000,
   * and T2100 will be sent on time (2100)
   * This will only limit updates, other events will be sent immediately, with a delete clearing anything held
   *
   * @generated from field: uint32 update_per_entity_limit_ms = 1;
   */
  updatePerEntityLimitMs: number;
};

/**
 * Describes the message anduril.entitymanager.v1.RateLimit.
 * Use `create(RateLimitSchema)` to create a new message.
 */
export declare const RateLimitSchema: GenMessage<RateLimit>;

