// @generated by protoc-gen-es v1.7.2 with parameter "target=ts"
// @generated from file anduril/entitymanager/v1/notification.pub.proto (package anduril.entitymanager.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Entity, Provenance } from "./entity.pub_pb.js";

/**
 * A notification to indicate when a field is overridden on an entity.
 *
 * @generated from message anduril.entitymanager.v1.OverrideNotificationPayload
 */
export class OverrideNotificationPayload extends Message<OverrideNotificationPayload> {
  /**
   * The entity containing the values to override and the entityID being overriden.
   * Used by the client to determine the value a field is overridden to (e.g. hostile).
   *
   * @generated from field: anduril.entitymanager.v1.Entity entity = 1;
   */
  entity?: Entity;

  /**
   * The field path determining the path on an entity to override. Used by the client
   * to determine whether an override request was for a particular field (e.g. disposition).
   *
   * @generated from field: string field_path = 2;
   */
  fieldPath = "";

  /**
   * The provenance of the override request. This should always match the OverrideEntityRequest
   * provenance field.
   *
   * @generated from field: anduril.entitymanager.v1.Provenance provenance = 3;
   */
  provenance?: Provenance;

  constructor(data?: PartialMessage<OverrideNotificationPayload>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "anduril.entitymanager.v1.OverrideNotificationPayload";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity", kind: "message", T: Entity },
    { no: 2, name: "field_path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "provenance", kind: "message", T: Provenance },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OverrideNotificationPayload {
    return new OverrideNotificationPayload().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OverrideNotificationPayload {
    return new OverrideNotificationPayload().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OverrideNotificationPayload {
    return new OverrideNotificationPayload().fromJsonString(jsonString, options);
  }

  static equals(a: OverrideNotificationPayload | PlainMessage<OverrideNotificationPayload> | undefined, b: OverrideNotificationPayload | PlainMessage<OverrideNotificationPayload> | undefined): boolean {
    return proto3.util.equals(OverrideNotificationPayload, a, b);
  }
}

