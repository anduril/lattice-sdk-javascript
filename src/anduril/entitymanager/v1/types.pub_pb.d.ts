// @generated by protoc-gen-es v2.2.0 with parameter "import_extension=js"
// @generated from file anduril/entitymanager/v1/types.pub.proto (package anduril.entitymanager.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file anduril/entitymanager/v1/types.pub.proto.
 */
export declare const file_anduril_entitymanager_v1_types_pub: GenFile;

/**
 * @generated from message anduril.entitymanager.v1.UInt32Range
 */
export declare type UInt32Range = Message<"anduril.entitymanager.v1.UInt32Range"> & {
  /**
   * @generated from field: uint32 lower_bound = 1;
   */
  lowerBound: number;

  /**
   * @generated from field: uint32 upper_bound = 2;
   */
  upperBound: number;
};

/**
 * Describes the message anduril.entitymanager.v1.UInt32Range.
 * Use `create(UInt32RangeSchema)` to create a new message.
 */
export declare const UInt32RangeSchema: GenMessage<UInt32Range>;

/**
 * @generated from message anduril.entitymanager.v1.FloatRange
 */
export declare type FloatRange = Message<"anduril.entitymanager.v1.FloatRange"> & {
  /**
   * @generated from field: float lower_bound = 1;
   */
  lowerBound: number;

  /**
   * @generated from field: float upper_bound = 2;
   */
  upperBound: number;
};

/**
 * Describes the message anduril.entitymanager.v1.FloatRange.
 * Use `create(FloatRangeSchema)` to create a new message.
 */
export declare const FloatRangeSchema: GenMessage<FloatRange>;

/**
 * The type of alternate id.
 *
 * @generated from enum anduril.entitymanager.v1.AltIdType
 */
export enum AltIdType {
  /**
   * @generated from enum value: ALT_ID_TYPE_INVALID = 0;
   */
  INVALID = 0,

  /**
   * an Anduril trackId_2
   *
   * @generated from enum value: ALT_ID_TYPE_TRACK_ID_2 = 1;
   */
  TRACK_ID_2 = 1,

  /**
   * an Anduril trackId_1
   *
   * @generated from enum value: ALT_ID_TYPE_TRACK_ID_1 = 12;
   */
  TRACK_ID_1 = 12,

  /**
   * an Anduril Sensor Point of Interest ID
   *
   * @generated from enum value: ALT_ID_TYPE_SPI_ID = 2;
   */
  SPI_ID = 2,

  /**
   * NITF file title
   *
   * @generated from enum value: ALT_ID_TYPE_NITF_FILE_TITLE = 3;
   */
  NITF_FILE_TITLE = 3,

  /**
   * Track repo alert ID
   *
   * @generated from enum value: ALT_ID_TYPE_TRACK_REPO_ALERT_ID = 4;
   */
  TRACK_REPO_ALERT_ID = 4,

  /**
   * an Anduril AssetId v2
   *
   * @generated from enum value: ALT_ID_TYPE_ASSET_ID = 5;
   */
  ASSET_ID = 5,

  /**
   * Use for Link 16 track identifiers for non-JTIDS Unit entities.
   *
   * @generated from enum value: ALT_ID_TYPE_LINK16_TRACK_NUMBER = 6;
   */
  LINK16_TRACK_NUMBER = 6,

  /**
   * Use for Link 16 JTIDS Unit identifiers.
   *
   * @generated from enum value: ALT_ID_TYPE_LINK16_JU = 7;
   */
  LINK16_JU = 7,

  /**
   * an NCCT message ID
   *
   * @generated from enum value: ALT_ID_TYPE_NCCT_MESSAGE_ID = 8;
   */
  NCCT_MESSAGE_ID = 8,

  /**
   * callsign for the entity. e.g. a TAK callsign or an aircraft callsign
   *
   * @generated from enum value: ALT_ID_TYPE_CALLSIGN = 9;
   */
  CALLSIGN = 9,

  /**
   * the Maritime Mobile Service Identity for a maritime object (vessel, offshore installation, etc.)
   *
   * @generated from enum value: ALT_ID_TYPE_MMSI_ID = 10;
   */
  MMSI_ID = 10,

  /**
   * A VMF URN that uniquely identifies the URN on the VMF network.
   *
   * @generated from enum value: ALT_ID_TYPE_VMF_URN = 11;
   */
  VMF_URN = 11,

  /**
   * the International Maritime Organization number for identifying maritime objects (vessel, offshore installation, etc.)
   *
   * @generated from enum value: ALT_ID_TYPE_IMO_ID = 13;
   */
  IMO_ID = 13,

  /**
   * A VMF target number that uniquely identifies the target on the VMF network
   *
   * @generated from enum value: ALT_ID_TYPE_VMF_TARGET_NUMBER = 14;
   */
  VMF_TARGET_NUMBER = 14,

  /**
   * A serial number that uniquely identifies the entity and is permanently associated with only one entity. This
   * identifier is assigned by some authority and only ever identifies a single thing. Examples include a
   * Vehicle Identification Number (VIN) or ship hull identification number (hull number). This is a generalized
   * component and should not be used if a more specific registration type is already defined (i.e., ALT_ID_TYPE_VMF_URN).
   *
   * @generated from enum value: ALT_ID_TYPE_SERIAL_NUMBER = 15;
   */
  SERIAL_NUMBER = 15,

  /**
   * A registration identifier assigned by a local or national authority. This identifier is not permanently fixed
   * to one specific entity and may be reassigned on change of ownership, destruction, or other conditions set
   * forth by the authority. Examples include a vehicle license plate or aircraft tail number. This is a generalized
   * component and should not be used if a more specific registration type is already defined (i.e., ALT_ID_TYPE_IMO_ID).
   *
   * @generated from enum value: ALT_ID_TYPE_REGISTRATION_ID = 16;
   */
  REGISTRATION_ID = 16,

  /**
   * Integrated Broadcast Service Common Message Format Global Identifier
   *
   * @generated from enum value: ALT_ID_TYPE_IBS_GID = 17;
   */
  IBS_GID = 17,

  /**
   * Department of Defense Activity Address Code.
   *
   * @generated from enum value: ALT_ID_TYPE_DODAAC = 18;
   */
  DODAAC = 18,

  /**
   * Unit Identification Code uniquely identifies each US Department of Defense entity
   *
   * @generated from enum value: ALT_ID_TYPE_UIC = 19;
   */
  UIC = 19,

  /**
   * A NORAD Satellite Catalog Number, a 9-digit number uniquely representing orbital objects around Earth.
   * of strictly numeric.
   *
   * @generated from enum value: ALT_ID_TYPE_NORAD_CAT_ID = 20;
   */
  NORAD_CAT_ID = 20,

  /**
   * Space object name. If populated, use names from the UN Office
   * of Outer Space Affairs designator index, otherwise set field to UNKNOWN.
   *
   * @generated from enum value: ALT_ID_TYPE_UNOOSA_NAME = 23;
   */
  UNOOSA_NAME = 23,

  /**
   * Space object identifier. If populated, use the international spacecraft designator
   * as published in the UN Office of Outer Space Affairs designator index, otherwise set to UNKNOWN.
   * Recommended values have the format YYYYNNNP{PP}, where:
   *  YYYY = Year of launch.
   *  NNN = Three-digit serial number of launch
   *  in year YYYY (with leading zeros).
   *  P{PP} = At least one capital letter for the
   *  identification of the part brought
   *  into space by the launch.
   *
   * @generated from enum value: ALT_ID_TYPE_UNOOSA_ID = 24;
   */
  UNOOSA_ID = 24,
}

/**
 * Describes the enum anduril.entitymanager.v1.AltIdType.
 */
export declare const AltIdTypeSchema: GenEnum<AltIdType>;

/**
 * Set of possible templates used when creating an entity.
 * This impacts minimum required component sets and can be used by edge systems that need to distinguish.
 *
 * @generated from enum anduril.entitymanager.v1.Template
 */
export enum Template {
  /**
   * @generated from enum value: TEMPLATE_INVALID = 0;
   */
  INVALID = 0,

  /**
   * additional track required components:
   *   * location
   *   * mil_view
   *
   * @generated from enum value: TEMPLATE_TRACK = 1;
   */
  TRACK = 1,

  /**
   * additional SPI required components:
   *   * location
   *   * mil_view
   *   * produced_by
   *
   * @generated from enum value: TEMPLATE_SENSOR_POINT_OF_INTEREST = 2;
   */
  SENSOR_POINT_OF_INTEREST = 2,

  /**
   * additional asset required components:
   *   * location
   *   * mil_view
   *   * ontology
   *
   * @generated from enum value: TEMPLATE_ASSET = 3;
   */
  ASSET = 3,

  /**
   * additional geo required components:
   *   * geo_shape
   *   * geo_details
   *
   * @generated from enum value: TEMPLATE_GEO = 4;
   */
  GEO = 4,

  /**
   * additional SOI required components:
   *   * signal
   *   * location field should be populated if there is a fix.
   *   * mil_view
   *   * ontology
   *
   * @generated from enum value: TEMPLATE_SIGNAL_OF_INTEREST = 5;
   */
  SIGNAL_OF_INTEREST = 5,
}

/**
 * Describes the enum anduril.entitymanager.v1.Template.
 */
export declare const TemplateSchema: GenEnum<Template>;

/**
 * The state of an override.
 *
 * @generated from enum anduril.entitymanager.v1.OverrideStatus
 */
export enum OverrideStatus {
  /**
   * @generated from enum value: OVERRIDE_STATUS_INVALID = 0;
   */
  INVALID = 0,

  /**
   * the override was applied to the entity.
   *
   * @generated from enum value: OVERRIDE_STATUS_APPLIED = 1;
   */
  APPLIED = 1,

  /**
   * the override is pending action.
   *
   * @generated from enum value: OVERRIDE_STATUS_PENDING = 2;
   */
  PENDING = 2,

  /**
   * the override has been timed out.
   *
   * @generated from enum value: OVERRIDE_STATUS_TIMEOUT = 3;
   */
  TIMEOUT = 3,

  /**
   * the override has been rejected
   *
   * @generated from enum value: OVERRIDE_STATUS_REJECTED = 4;
   */
  REJECTED = 4,

  /**
   * The override is pending deletion.
   *
   * @generated from enum value: OVERRIDE_STATUS_DELETION_PENDING = 5;
   */
  DELETION_PENDING = 5,
}

/**
 * Describes the enum anduril.entitymanager.v1.OverrideStatus.
 */
export declare const OverrideStatusSchema: GenEnum<OverrideStatus>;

/**
 * @generated from enum anduril.entitymanager.v1.OverrideType
 */
export enum OverrideType {
  /**
   * The override type value was not set. This value is interpreted as OVERRIDE_TYPE_LIVE for backward compatibility.
   *
   * @generated from enum value: OVERRIDE_TYPE_INVALID = 0;
   */
  INVALID = 0,

  /**
   * Override was requested when the entity was live according to the Entity Manager instance that handled the request.
   *
   * @generated from enum value: OVERRIDE_TYPE_LIVE = 1;
   */
  LIVE = 1,

  /**
   * Override was requested after the entity expired according to the Entity Manager instance that handled the request.
   *
   * @generated from enum value: OVERRIDE_TYPE_POST_EXPIRY = 2;
   */
  POST_EXPIRY = 2,
}

/**
 * Describes the enum anduril.entitymanager.v1.OverrideType.
 */
export declare const OverrideTypeSchema: GenEnum<OverrideType>;

