// @generated by protoc-gen-es v1.7.2 with parameter "target=ts"
// @generated from file anduril/communicationsmanager/v1/entity.pub.proto (package anduril.communicationsmanager.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Statement } from "../../entitymanager/v1/filter.pub_pb.js";

/**
 * @generated from message anduril.communicationsmanager.v1.EntityIntegrationDetails
 */
export class EntityIntegrationDetails extends Message<EntityIntegrationDetails> {
  /**
   * @generated from field: repeated anduril.communicationsmanager.v1.EntityDataVendor vendors = 1;
   */
  vendors: EntityDataVendor[] = [];

  constructor(data?: PartialMessage<EntityIntegrationDetails>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "anduril.communicationsmanager.v1.EntityIntegrationDetails";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "vendors", kind: "message", T: EntityDataVendor, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EntityIntegrationDetails {
    return new EntityIntegrationDetails().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EntityIntegrationDetails {
    return new EntityIntegrationDetails().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EntityIntegrationDetails {
    return new EntityIntegrationDetails().fromJsonString(jsonString, options);
  }

  static equals(a: EntityIntegrationDetails | PlainMessage<EntityIntegrationDetails> | undefined, b: EntityIntegrationDetails | PlainMessage<EntityIntegrationDetails> | undefined): boolean {
    return proto3.util.equals(EntityIntegrationDetails, a, b);
  }
}

/**
 * @generated from message anduril.communicationsmanager.v1.EntityDataVendor
 */
export class EntityDataVendor extends Message<EntityDataVendor> {
  /**
   * @generated from field: string vendor_name = 1;
   */
  vendorName = "";

  /**
   * @generated from field: repeated string data_type = 2;
   */
  dataType: string[] = [];

  constructor(data?: PartialMessage<EntityDataVendor>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "anduril.communicationsmanager.v1.EntityDataVendor";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "vendor_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "data_type", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EntityDataVendor {
    return new EntityDataVendor().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EntityDataVendor {
    return new EntityDataVendor().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EntityDataVendor {
    return new EntityDataVendor().fromJsonString(jsonString, options);
  }

  static equals(a: EntityDataVendor | PlainMessage<EntityDataVendor> | undefined, b: EntityDataVendor | PlainMessage<EntityDataVendor> | undefined): boolean {
    return proto3.util.equals(EntityDataVendor, a, b);
  }
}

/**
 * Message to contain entity integration rules
 *
 * @generated from message anduril.communicationsmanager.v1.EntityIntegrationRuleDetails
 */
export class EntityIntegrationRuleDetails extends Message<EntityIntegrationRuleDetails> {
  /**
   * The filter to be applied to the integration
   *
   * @generated from field: anduril.entitymanager.v1.Statement filter = 1;
   */
  filter?: Statement;

  constructor(data?: PartialMessage<EntityIntegrationRuleDetails>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "anduril.communicationsmanager.v1.EntityIntegrationRuleDetails";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "filter", kind: "message", T: Statement },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EntityIntegrationRuleDetails {
    return new EntityIntegrationRuleDetails().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EntityIntegrationRuleDetails {
    return new EntityIntegrationRuleDetails().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EntityIntegrationRuleDetails {
    return new EntityIntegrationRuleDetails().fromJsonString(jsonString, options);
  }

  static equals(a: EntityIntegrationRuleDetails | PlainMessage<EntityIntegrationRuleDetails> | undefined, b: EntityIntegrationRuleDetails | PlainMessage<EntityIntegrationRuleDetails> | undefined): boolean {
    return proto3.util.equals(EntityIntegrationRuleDetails, a, b);
  }
}

