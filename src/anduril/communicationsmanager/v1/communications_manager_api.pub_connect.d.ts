// @generated by protoc-gen-connect-es v1.4.0
// @generated from file anduril/communicationsmanager/v1/communications_manager_api.pub.proto (package anduril.communicationsmanager.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { DeleteRuleRequest, DeleteRuleResponse, PutRuleRequest, PutRuleResponse, StreamRulesRequest, StreamRulesResponse } from "./communications_manager_api.pub_pb.js";
import { MethodKind } from "@bufbuild/protobuf";
import { GetIntegrationsRequest, GetIntegrationsResponse, IntegrationHealthUpdateRequest, IntegrationHealthUpdateResponse, StreamIntegrationsRequest, StreamIntegrationsResponse } from "./integration.pub_pb.js";

/**
 * Manages the policies for distribution of data via application of filters & priorities.
 *
 * @generated from service anduril.communicationsmanager.v1.CommunicationsManagerAPI
 */
export declare const CommunicationsManagerAPI: {
  readonly typeName: "anduril.communicationsmanager.v1.CommunicationsManagerAPI",
  readonly methods: {
    /**
     * Puts a rule. Rules are distributed to all nodes in the mesh.
     *
     * @generated from rpc anduril.communicationsmanager.v1.CommunicationsManagerAPI.PutRule
     */
    readonly putRule: {
      readonly name: "PutRule",
      readonly I: typeof PutRuleRequest,
      readonly O: typeof PutRuleResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Streams all rules available to this distribution manager.
     *
     * @generated from rpc anduril.communicationsmanager.v1.CommunicationsManagerAPI.StreamRules
     */
    readonly streamRules: {
      readonly name: "StreamRules",
      readonly I: typeof StreamRulesRequest,
      readonly O: typeof StreamRulesResponse,
      readonly kind: MethodKind.ServerStreaming,
    },
    /**
     * @generated from rpc anduril.communicationsmanager.v1.CommunicationsManagerAPI.DeleteRule
     */
    readonly deleteRule: {
      readonly name: "DeleteRule",
      readonly I: typeof DeleteRuleRequest,
      readonly O: typeof DeleteRuleResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Stream a list of integrations registered with the system. Supports various
     * filters to constrain to specific nodes.
     *
     * @generated from rpc anduril.communicationsmanager.v1.CommunicationsManagerAPI.StreamIntegrations
     */
    readonly streamIntegrations: {
      readonly name: "StreamIntegrations",
      readonly I: typeof StreamIntegrationsRequest,
      readonly O: typeof StreamIntegrationsResponse,
      readonly kind: MethodKind.ServerStreaming,
    },
    /**
     * Deprecated: Use ListIntegrations instead.
     *
     * @generated from rpc anduril.communicationsmanager.v1.CommunicationsManagerAPI.GetIntegrations
     */
    readonly getIntegrations: {
      readonly name: "GetIntegrations",
      readonly I: typeof GetIntegrationsRequest,
      readonly O: typeof GetIntegrationsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc anduril.communicationsmanager.v1.CommunicationsManagerAPI.IntegrationHealthUpdate
     */
    readonly integrationHealthUpdate: {
      readonly name: "IntegrationHealthUpdate",
      readonly I: typeof IntegrationHealthUpdateRequest,
      readonly O: typeof IntegrationHealthUpdateResponse,
      readonly kind: MethodKind.Unary,
    },
  }
};

