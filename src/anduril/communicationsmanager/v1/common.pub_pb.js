// @generated by protoc-gen-es v2.0.0
// @generated from file anduril/communicationsmanager/v1/common.pub.proto (package anduril.communicationsmanager.v1, syntax proto3)
/* eslint-disable */

import { enumDesc, fileDesc, messageDesc, tsEnum } from "@bufbuild/protobuf/codegenv1";
import { file_anduril_blobs_v1_filter_pub } from "../../blobs/v1/filter.pub_pb";
import { file_anduril_communicationsmanager_v1_cross_domain_pub } from "./cross_domain.pub_pb";
import { file_anduril_communicationsmanager_v1_entity_pub } from "./entity.pub_pb";
import { file_anduril_entitymanager_v1_filter_pub } from "../../entitymanager/v1/filter.pub_pb";
import { file_anduril_entitymanager_v1_filter_dynamic_pub } from "../../entitymanager/v1/filter_dynamic.pub_pb";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file anduril/communicationsmanager/v1/common.pub.proto.
 */
export const file_anduril_communicationsmanager_v1_common_pub = /*@__PURE__*/
  fileDesc("CjFhbmR1cmlsL2NvbW11bmljYXRpb25zbWFuYWdlci92MS9jb21tb24ucHViLnByb3RvEiBhbmR1cmlsLmNvbW11bmljYXRpb25zbWFuYWdlci52MSLRAQoVRGlzdHJpYnV0aW9uUnVsZUV2ZW50Ej8KCmV2ZW50X3R5cGUYASABKA4yKy5hbmR1cmlsLmNvbW11bmljYXRpb25zbWFuYWdlci52MS5FdmVudFR5cGUSKAoEdGltZRgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASTQoRZGlzdHJpYnV0aW9uX3J1bGUYAyABKAsyMi5hbmR1cmlsLmNvbW11bmljYXRpb25zbWFuYWdlci52MS5EaXN0cmlidXRpb25SdWxlIqwBCglSdWxlRXZlbnQSPwoKZXZlbnRfdHlwZRgBIAEoDjIrLmFuZHVyaWwuY29tbXVuaWNhdGlvbnNtYW5hZ2VyLnYxLkV2ZW50VHlwZRIoCgR0aW1lGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBI0CgRydWxlGAMgASgLMiYuYW5kdXJpbC5jb21tdW5pY2F0aW9uc21hbmFnZXIudjEuUnVsZSKMAwoEUnVsZRIPCgdydWxlX2lkGAEgASgJEhMKC3ZlcnNpb25fbnVtGAIgASgDEg8KB2VuYWJsZWQYAyABKAgSDAoEbmFtZRgEIAEoCRJPChFkaXN0cmlidXRpb25fcnVsZRgFIAEoCzIyLmFuZHVyaWwuY29tbXVuaWNhdGlvbnNtYW5hZ2VyLnYxLkRpc3RyaWJ1dGlvblJ1bGVIABJNChBpbnRlZ3JhdGlvbl9ydWxlGAYgASgLMjEuYW5kdXJpbC5jb21tdW5pY2F0aW9uc21hbmFnZXIudjEuSW50ZWdyYXRpb25SdWxlSAASTgoRY3Jvc3NfZG9tYWluX3J1bGUYCSABKAsyMS5hbmR1cmlsLmNvbW11bmljYXRpb25zbWFuYWdlci52MS5Dcm9zc0RvbWFpblJ1bGVIABIdChVsYXN0X21vZGlmaWVkX2J5X3VzZXIYByABKAkSKAogbGFzdF9tb2RpZmllZF90aW1lX3VuaXhfZXBvY2hfbXMYCCABKANCBgoEdHlwZSKaAgoPSW50ZWdyYXRpb25SdWxlEhgKEGludGVncmF0aW9uX25hbWUYASABKAkSDwoHaG9zdF9pZBgCIAEoCRJpCh9lbnRpdHlfaW50ZWdyYXRpb25fcnVsZV9kZXRhaWxzGAMgASgLMj4uYW5kdXJpbC5jb21tdW5pY2F0aW9uc21hbmFnZXIudjEuRW50aXR5SW50ZWdyYXRpb25SdWxlRGV0YWlsc0gAEmYKHWJsb2JfaW50ZWdyYXRpb25fcnVsZV9kZXRhaWxzGAQgASgLMj0uYW5kdXJpbC5jb21tdW5pY2F0aW9uc21hbmFnZXIudjEuQmxvYkRpc3RyaWJ1dGlvblJ1bGVEZXRhaWxzSABCCQoHZGV0YWlscyKMBQoQRGlzdHJpYnV0aW9uUnVsZRIPCgdydWxlX2lkGAEgASgJEhMKB3ZlcnNpb24YAiABKAlCAhgBEg8KB2VuYWJsZWQYAyABKAgSPAoGc291cmNlGAQgASgLMiguYW5kdXJpbC5jb21tdW5pY2F0aW9uc21hbmFnZXIudjEuU291cmNlQgIYARI9Cgdzb3VyY2VzGAggAygLMiguYW5kdXJpbC5jb21tdW5pY2F0aW9uc21hbmFnZXIudjEuU291cmNlQgIYARJGCgtkZXN0aW5hdGlvbhgFIAEoCzItLmFuZHVyaWwuY29tbXVuaWNhdGlvbnNtYW5hZ2VyLnYxLkRlc3RpbmF0aW9uQgIYARJZCg5lbnRpdHlfZGV0YWlscxgGIAEoCzI/LmFuZHVyaWwuY29tbXVuaWNhdGlvbnNtYW5hZ2VyLnYxLkVudGl0eURpc3RyaWJ1dGlvblJ1bGVEZXRhaWxzSAASVQoMYmxvYl9kZXRhaWxzGA0gASgLMj0uYW5kdXJpbC5jb21tdW5pY2F0aW9uc21hbmFnZXIudjEuQmxvYkRpc3RyaWJ1dGlvblJ1bGVEZXRhaWxzSAASEAoIcHJpb3JpdHkYByABKA0SEwoLZGVzY3JpcHRpb24YCSABKAkSDAoEbmFtZRgKIAEoCRITCgt2ZXJzaW9uX251bRgLIAEoAxJ1CiZzb3VyY2VfZGVzdGluYXRpb25fZGlyZWN0aW9uYWxfY29udHJvbBgMIAEoCzJFLmFuZHVyaWwuY29tbXVuaWNhdGlvbnNtYW5hZ2VyLnYxLlNvdXJjZURlc3RpbmF0aW9uRGlyZWN0aW9uYWxDb250cm9sQgkKB2RldGFpbHMikwIKI1NvdXJjZURlc3RpbmF0aW9uRGlyZWN0aW9uYWxDb250cm9sEmkKH2luYm91bmRfcnVsZV9zb3VyY2VfZGVzdGluYXRpb24YASABKAsyPi5hbmR1cmlsLmNvbW11bmljYXRpb25zbWFuYWdlci52MS5JbmJvdW5kUnVsZVNvdXJjZURlc3RpbmF0aW9uSAASawogb3V0Ym91bmRfcnVsZV9zb3VyY2VfZGVzdGluYXRpb24YAiABKAsyPy5hbmR1cmlsLmNvbW11bmljYXRpb25zbWFuYWdlci52MS5PdXRib3VuZFJ1bGVTb3VyY2VEZXN0aW5hdGlvbkgAQhQKEnNvdXJjZV9kZXN0aW5hdGlvbiKeAQodT3V0Ym91bmRSdWxlU291cmNlRGVzdGluYXRpb24SOAoGc291cmNlGAEgASgLMiguYW5kdXJpbC5jb21tdW5pY2F0aW9uc21hbmFnZXIudjEuU291cmNlEkMKDGRlc3RpbmF0aW9ucxgCIAMoCzItLmFuZHVyaWwuY29tbXVuaWNhdGlvbnNtYW5hZ2VyLnYxLkRlc3RpbmF0aW9uIp0BChxJbmJvdW5kUnVsZVNvdXJjZURlc3RpbmF0aW9uEjkKB3NvdXJjZXMYASADKAsyKC5hbmR1cmlsLmNvbW11bmljYXRpb25zbWFuYWdlci52MS5Tb3VyY2USQgoLZGVzdGluYXRpb24YAiABKAsyLS5hbmR1cmlsLmNvbW11bmljYXRpb25zbWFuYWdlci52MS5EZXN0aW5hdGlvbiJMCgZTb3VyY2USFgoIYXNzZXRfaWQYASABKAlCAhgBSAASDQoDYWxsGAIgASgISAASEQoHaG9zdF9pZBgDIAEoCUgAQggKBnNvdXJjZSJWCgtEZXN0aW5hdGlvbhIWCghhc3NldF9pZBgBIAEoCUICGAFIABIRCgdob3N0X2lkGAIgASgJSAASDQoDYWxsGAMgASgISABCDQoLZGVzdGluYXRpb24igAIKHUVudGl0eURpc3RyaWJ1dGlvblJ1bGVEZXRhaWxzEjoKDWVudGl0eV9maWx0ZXIYASABKAsyIy5hbmR1cmlsLmVudGl0eW1hbmFnZXIudjEuU3RhdGVtZW50Ej8KEHN0YXRpY19zdGF0ZW1lbnQYAiABKAsyIy5hbmR1cmlsLmVudGl0eW1hbmFnZXIudjEuU3RhdGVtZW50SAASRwoRZHluYW1pY19zdGF0ZW1lbnQYAyABKAsyKi5hbmR1cmlsLmVudGl0eW1hbmFnZXIudjEuRHluYW1pY1N0YXRlbWVudEgAQhkKF2VudGl0eV9maWx0ZXJfc2VsZWN0aW9uIoYBChtCbG9iRGlzdHJpYnV0aW9uUnVsZURldGFpbHMSNAoLYmxvYl9maWx0ZXIYASABKAsyGy5hbmR1cmlsLmJsb2JzLnYxLlN0YXRlbWVudEICGAESMQoMYmxvYl9maWx0ZXJzGAIgAygLMhsuYW5kdXJpbC5ibG9icy52MS5TdGF0ZW1lbnQiLQoaQ29tbXVuaWNhdGlvbnNNYW5hZ2VyRXJyb3ISDwoHbWVzc2FnZRgBIAEoCSLCAQoPQ3Jvc3NEb21haW5SdWxlElkKDmVudGl0eV9kZXRhaWxzGAEgASgLMj8uYW5kdXJpbC5jb21tdW5pY2F0aW9uc21hbmFnZXIudjEuRW50aXR5RGlzdHJpYnV0aW9uUnVsZURldGFpbHNIABJJCg9jZHNfZGVzdGluYXRpb24YAiABKAsyMC5hbmR1cmlsLmNvbW11bmljYXRpb25zbWFuYWdlci52MS5DZHNEZXN0aW5hdGlvbkIJCgdkZXRhaWxzKoYBCglFdmVudFR5cGUSFgoSRVZFTlRfVFlQRV9JTlZBTElEEAASFgoSRVZFTlRfVFlQRV9DUkVBVEVEEAESFQoRRVZFTlRfVFlQRV9VUERBVEUQAhIWChJFVkVOVF9UWVBFX0RFTEVURUQQAxIaChZFVkVOVF9UWVBFX1BSRUVYSVNUSU5HEARCoQIKJGNvbS5hbmR1cmlsLmNvbW11bmljYXRpb25zbWFuYWdlci52MUIOQ29tbW9uUHViUHJvdG9QAVpHZ2hlLmFuZHVyaWwuZGV2L2FuZHVyaWwvYW5kdXJpbGFwaXMtZ28vYW5kdXJpbC9jb21tdW5pY2F0aW9uc21hbmFnZXIvdjGiAgNBQ1iqAiBBbmR1cmlsLkNvbW11bmljYXRpb25zbWFuYWdlci5WMcoCIEFuZHVyaWxcQ29tbXVuaWNhdGlvbnNtYW5hZ2VyXFYx4gIsQW5kdXJpbFxDb21tdW5pY2F0aW9uc21hbmFnZXJcVjFcR1BCTWV0YWRhdGHqAiJBbmR1cmlsOjpDb21tdW5pY2F0aW9uc21hbmFnZXI6OlYxYgZwcm90bzM", [file_anduril_blobs_v1_filter_pub, file_anduril_communicationsmanager_v1_cross_domain_pub, file_anduril_communicationsmanager_v1_entity_pub, file_anduril_entitymanager_v1_filter_pub, file_anduril_entitymanager_v1_filter_dynamic_pub, file_google_protobuf_timestamp]);

/**
 * Describes the message anduril.communicationsmanager.v1.DistributionRuleEvent.
 * Use `create(DistributionRuleEventSchema)` to create a new message.
 */
export const DistributionRuleEventSchema = /*@__PURE__*/
  messageDesc(file_anduril_communicationsmanager_v1_common_pub, 0);

/**
 * Describes the message anduril.communicationsmanager.v1.RuleEvent.
 * Use `create(RuleEventSchema)` to create a new message.
 */
export const RuleEventSchema = /*@__PURE__*/
  messageDesc(file_anduril_communicationsmanager_v1_common_pub, 1);

/**
 * Describes the message anduril.communicationsmanager.v1.Rule.
 * Use `create(RuleSchema)` to create a new message.
 */
export const RuleSchema = /*@__PURE__*/
  messageDesc(file_anduril_communicationsmanager_v1_common_pub, 2);

/**
 * Describes the message anduril.communicationsmanager.v1.IntegrationRule.
 * Use `create(IntegrationRuleSchema)` to create a new message.
 */
export const IntegrationRuleSchema = /*@__PURE__*/
  messageDesc(file_anduril_communicationsmanager_v1_common_pub, 3);

/**
 * Describes the message anduril.communicationsmanager.v1.DistributionRule.
 * Use `create(DistributionRuleSchema)` to create a new message.
 */
export const DistributionRuleSchema = /*@__PURE__*/
  messageDesc(file_anduril_communicationsmanager_v1_common_pub, 4);

/**
 * Describes the message anduril.communicationsmanager.v1.SourceDestinationDirectionalControl.
 * Use `create(SourceDestinationDirectionalControlSchema)` to create a new message.
 */
export const SourceDestinationDirectionalControlSchema = /*@__PURE__*/
  messageDesc(file_anduril_communicationsmanager_v1_common_pub, 5);

/**
 * Describes the message anduril.communicationsmanager.v1.OutboundRuleSourceDestination.
 * Use `create(OutboundRuleSourceDestinationSchema)` to create a new message.
 */
export const OutboundRuleSourceDestinationSchema = /*@__PURE__*/
  messageDesc(file_anduril_communicationsmanager_v1_common_pub, 6);

/**
 * Describes the message anduril.communicationsmanager.v1.InboundRuleSourceDestination.
 * Use `create(InboundRuleSourceDestinationSchema)` to create a new message.
 */
export const InboundRuleSourceDestinationSchema = /*@__PURE__*/
  messageDesc(file_anduril_communicationsmanager_v1_common_pub, 7);

/**
 * Describes the message anduril.communicationsmanager.v1.Source.
 * Use `create(SourceSchema)` to create a new message.
 */
export const SourceSchema = /*@__PURE__*/
  messageDesc(file_anduril_communicationsmanager_v1_common_pub, 8);

/**
 * Describes the message anduril.communicationsmanager.v1.Destination.
 * Use `create(DestinationSchema)` to create a new message.
 */
export const DestinationSchema = /*@__PURE__*/
  messageDesc(file_anduril_communicationsmanager_v1_common_pub, 9);

/**
 * Describes the message anduril.communicationsmanager.v1.EntityDistributionRuleDetails.
 * Use `create(EntityDistributionRuleDetailsSchema)` to create a new message.
 */
export const EntityDistributionRuleDetailsSchema = /*@__PURE__*/
  messageDesc(file_anduril_communicationsmanager_v1_common_pub, 10);

/**
 * Describes the message anduril.communicationsmanager.v1.BlobDistributionRuleDetails.
 * Use `create(BlobDistributionRuleDetailsSchema)` to create a new message.
 */
export const BlobDistributionRuleDetailsSchema = /*@__PURE__*/
  messageDesc(file_anduril_communicationsmanager_v1_common_pub, 11);

/**
 * Describes the message anduril.communicationsmanager.v1.CommunicationsManagerError.
 * Use `create(CommunicationsManagerErrorSchema)` to create a new message.
 */
export const CommunicationsManagerErrorSchema = /*@__PURE__*/
  messageDesc(file_anduril_communicationsmanager_v1_common_pub, 12);

/**
 * Describes the message anduril.communicationsmanager.v1.CrossDomainRule.
 * Use `create(CrossDomainRuleSchema)` to create a new message.
 */
export const CrossDomainRuleSchema = /*@__PURE__*/
  messageDesc(file_anduril_communicationsmanager_v1_common_pub, 13);

/**
 * Describes the enum anduril.communicationsmanager.v1.EventType.
 */
export const EventTypeSchema = /*@__PURE__*/
  enumDesc(file_anduril_communicationsmanager_v1_common_pub, 0);

/**
 * The type of distribution rule event.
 *
 * @generated from enum anduril.communicationsmanager.v1.EventType
 */
export const EventType = /*@__PURE__*/
  tsEnum(EventTypeSchema);

