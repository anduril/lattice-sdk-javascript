// @generated by protoc-gen-es v1.7.2 with parameter "target=ts"
// @generated from file anduril/communicationsmanager/v1/blobs.pub.proto (package anduril.communicationsmanager.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Statement } from "../../blobs/v1/filter.pub_pb.js";

/**
 * @generated from message anduril.communicationsmanager.v1.BlobsIntegrationDetails
 */
export class BlobsIntegrationDetails extends Message<BlobsIntegrationDetails> {
  /**
   * data types registered to the blobs integration.
   *
   * @generated from field: repeated string data_types = 1;
   */
  dataTypes: string[] = [];

  constructor(data?: PartialMessage<BlobsIntegrationDetails>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "anduril.communicationsmanager.v1.BlobsIntegrationDetails";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "data_types", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BlobsIntegrationDetails {
    return new BlobsIntegrationDetails().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BlobsIntegrationDetails {
    return new BlobsIntegrationDetails().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BlobsIntegrationDetails {
    return new BlobsIntegrationDetails().fromJsonString(jsonString, options);
  }

  static equals(a: BlobsIntegrationDetails | PlainMessage<BlobsIntegrationDetails> | undefined, b: BlobsIntegrationDetails | PlainMessage<BlobsIntegrationDetails> | undefined): boolean {
    return proto3.util.equals(BlobsIntegrationDetails, a, b);
  }
}

/**
 * Message to contain blob integration rules
 *
 * @generated from message anduril.communicationsmanager.v1.BlobIntegrationRuleDetails
 */
export class BlobIntegrationRuleDetails extends Message<BlobIntegrationRuleDetails> {
  /**
   * The filter to be applied to the integration
   *
   * @generated from field: repeated anduril.blobs.v1.Statement filters = 1;
   */
  filters: Statement[] = [];

  constructor(data?: PartialMessage<BlobIntegrationRuleDetails>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "anduril.communicationsmanager.v1.BlobIntegrationRuleDetails";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "filters", kind: "message", T: Statement, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BlobIntegrationRuleDetails {
    return new BlobIntegrationRuleDetails().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BlobIntegrationRuleDetails {
    return new BlobIntegrationRuleDetails().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BlobIntegrationRuleDetails {
    return new BlobIntegrationRuleDetails().fromJsonString(jsonString, options);
  }

  static equals(a: BlobIntegrationRuleDetails | PlainMessage<BlobIntegrationRuleDetails> | undefined, b: BlobIntegrationRuleDetails | PlainMessage<BlobIntegrationRuleDetails> | undefined): boolean {
    return proto3.util.equals(BlobIntegrationRuleDetails, a, b);
  }
}

