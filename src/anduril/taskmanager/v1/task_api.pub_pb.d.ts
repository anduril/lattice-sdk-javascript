// @generated by protoc-gen-es v1.7.2 with parameter "js_import_style=legacy_commonjs"
// @generated from file anduril/taskmanager/v1/task_api.pub.proto (package anduril.taskmanager.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { Principal, Task } from "./task.pub_pb.js";

/**
 * Request to execute a Task.
 *
 * @generated from message anduril.taskmanager.v1.ExecuteRequest
 */
export declare class ExecuteRequest extends Message<ExecuteRequest> {
  /**
   * Task to execute.
   *
   * @generated from field: anduril.taskmanager.v1.Task task = 1;
   */
  task?: Task;

  constructor(data?: PartialMessage<ExecuteRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "anduril.taskmanager.v1.ExecuteRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExecuteRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExecuteRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExecuteRequest;

  static equals(a: ExecuteRequest | PlainMessage<ExecuteRequest> | undefined, b: ExecuteRequest | PlainMessage<ExecuteRequest> | undefined): boolean;
}

/**
 * Request to Cancel a Task.
 *
 * @generated from message anduril.taskmanager.v1.CancelRequest
 */
export declare class CancelRequest extends Message<CancelRequest> {
  /**
   * ID of the Task to cancel.
   *
   * @generated from field: string task_id = 1;
   */
  taskId: string;

  /**
   * The assignee of the Task. Useful for agent routing where an endpoint owns multiple agents,
   * especially onBehalfOf assignees.
   *
   * @generated from field: anduril.taskmanager.v1.Principal assignee = 2;
   */
  assignee?: Principal;

  constructor(data?: PartialMessage<CancelRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "anduril.taskmanager.v1.CancelRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CancelRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CancelRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CancelRequest;

  static equals(a: CancelRequest | PlainMessage<CancelRequest> | undefined, b: CancelRequest | PlainMessage<CancelRequest> | undefined): boolean;
}

/**
 * Request to Complete a Task.
 *
 * @generated from message anduril.taskmanager.v1.CompleteRequest
 */
export declare class CompleteRequest extends Message<CompleteRequest> {
  /**
   * ID of the task to complete.
   *
   * @generated from field: string task_id = 1;
   */
  taskId: string;

  constructor(data?: PartialMessage<CompleteRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "anduril.taskmanager.v1.CompleteRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CompleteRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CompleteRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CompleteRequest;

  static equals(a: CompleteRequest | PlainMessage<CompleteRequest> | undefined, b: CompleteRequest | PlainMessage<CompleteRequest> | undefined): boolean;
}

