// @generated by protoc-gen-connect-es v1.4.0 with parameter "js_import_style=legacy_commonjs"
// @generated from file anduril/taskmanager/v1/task_manager_api.pub.proto (package anduril.taskmanager.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

const { CreateTaskRequest, CreateTaskResponse, GetTaskRequest, GetTaskResponse, ListenAsAgentRequest, ListenAsAgentResponse, QueryTasksRequest, QueryTasksResponse, UpdateStatusRequest, UpdateStatusResponse } = require("./task_manager_api.pub_pb.js");
const { MethodKind } = require("@bufbuild/protobuf");

/**
 * Task Manager is a service that performs state management associated with Tasks, and also the execution of Tasks
 * on their designated agents.
 *
 * @generated from service anduril.taskmanager.v1.TaskManagerAPI
 */
const TaskManagerAPI = {
  typeName: "anduril.taskmanager.v1.TaskManagerAPI",
  methods: {
    /**
     * Create a new Task.
     *
     * @generated from rpc anduril.taskmanager.v1.TaskManagerAPI.CreateTask
     */
    createTask: {
      name: "CreateTask",
      I: CreateTaskRequest,
      O: CreateTaskResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get an existing Task.
     *
     * @generated from rpc anduril.taskmanager.v1.TaskManagerAPI.GetTask
     */
    getTask: {
      name: "GetTask",
      I: GetTaskRequest,
      O: GetTaskResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Find Tasks that match request criteria.
     *
     * @generated from rpc anduril.taskmanager.v1.TaskManagerAPI.QueryTasks
     */
    queryTasks: {
      name: "QueryTasks",
      I: QueryTasksRequest,
      O: QueryTasksResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update the status of a Task.
     *
     * @generated from rpc anduril.taskmanager.v1.TaskManagerAPI.UpdateStatus
     */
    updateStatus: {
      name: "UpdateStatus",
      I: UpdateStatusRequest,
      O: UpdateStatusResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Stream Tasks ready for RPC Agent execution that match agent selector (ex: entity_ids).
     * Intended for use by Taskable Agents that need to receive Tasks ready for execution by RPC (no Flux access)
     *
     * @generated from rpc anduril.taskmanager.v1.TaskManagerAPI.ListenAsAgent
     */
    listenAsAgent: {
      name: "ListenAsAgent",
      I: ListenAsAgentRequest,
      O: ListenAsAgentResponse,
      kind: MethodKind.ServerStreaming,
    },
  }
};


exports.TaskManagerAPI = TaskManagerAPI;
