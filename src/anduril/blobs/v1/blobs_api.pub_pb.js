// @generated by protoc-gen-es v1.7.2 with parameter "js_import_style=legacy_commonjs"
// @generated from file anduril/blobs/v1/blobs_api.pub.proto (package anduril.blobs.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

const { proto3, Timestamp } = require("@bufbuild/protobuf");
const { BlobMetadata, BlobProvenance } = require("./common.pub_pb.js");

/**
 * Create and store a new blob (<=2MB).
 *
 * @generated from message anduril.blobs.v1.CreateBlobRequest
 */
const CreateBlobRequest = proto3.makeMessageType(
  "anduril.blobs.v1.CreateBlobRequest",
  () => [
    { no: 1, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "retention_time", kind: "message", T: Timestamp },
    { no: 4, name: "md5", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 5, name: "contents", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 6, name: "provenance", kind: "message", T: BlobProvenance },
  ],
);

/**
 * @generated from message anduril.blobs.v1.CreateBlobResponse
 */
const CreateBlobResponse = proto3.makeMessageType(
  "anduril.blobs.v1.CreateBlobResponse",
  () => [
    { no: 1, name: "metadata", kind: "message", T: BlobMetadata },
    { no: 2, name: "url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * Create and store a new blob. Only the first 'CreateBlobChunkedRequest' message in the client stream needs
 * to contain metadata specific fields (IE: client_id, key, md5 etc.). Metadata fields set on all requests
 * ensuing the first request will be ignored.
 *
 * @generated from message anduril.blobs.v1.CreateBlobChunkedRequest
 */
const CreateBlobChunkedRequest = proto3.makeMessageType(
  "anduril.blobs.v1.CreateBlobChunkedRequest",
  () => [
    { no: 1, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "retention_time", kind: "message", T: Timestamp },
    { no: 4, name: "md5", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 5, name: "chunk_contents", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 6, name: "provenance", kind: "message", T: BlobProvenance },
  ],
);

/**
 * @generated from message anduril.blobs.v1.CreateBlobChunkedResponse
 */
const CreateBlobChunkedResponse = proto3.makeMessageType(
  "anduril.blobs.v1.CreateBlobChunkedResponse",
  () => [
    { no: 1, name: "metadata", kind: "message", T: BlobMetadata },
    { no: 2, name: "url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message anduril.blobs.v1.GetBlobRequest
 */
const GetBlobRequest = proto3.makeMessageType(
  "anduril.blobs.v1.GetBlobRequest",
  () => [
    { no: 1, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message anduril.blobs.v1.GetBlobResponse
 */
const GetBlobResponse = proto3.makeMessageType(
  "anduril.blobs.v1.GetBlobResponse",
  () => [
    { no: 1, name: "contents", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 2, name: "metadata", kind: "message", T: BlobMetadata },
  ],
);

/**
 * @generated from message anduril.blobs.v1.HeadBlobRequest
 */
const HeadBlobRequest = proto3.makeMessageType(
  "anduril.blobs.v1.HeadBlobRequest",
  () => [
    { no: 1, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message anduril.blobs.v1.HeadBlobResponse
 */
const HeadBlobResponse = proto3.makeMessageType(
  "anduril.blobs.v1.HeadBlobResponse",
  () => [
    { no: 1, name: "metadata", kind: "message", T: BlobMetadata },
    { no: 2, name: "url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message anduril.blobs.v1.StreamBlobMetadataRequest
 */
const StreamBlobMetadataRequest = proto3.makeMessageType(
  "anduril.blobs.v1.StreamBlobMetadataRequest",
  () => [
    { no: 1, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message anduril.blobs.v1.StreamBlobMetadataResponse
 */
const StreamBlobMetadataResponse = proto3.makeMessageType(
  "anduril.blobs.v1.StreamBlobMetadataResponse",
  () => [
    { no: 1, name: "announcements", kind: "message", T: BlobAnnouncement, repeated: true },
  ],
);

/**
 * @generated from message anduril.blobs.v1.BlobAnnouncement
 */
const BlobAnnouncement = proto3.makeMessageType(
  "anduril.blobs.v1.BlobAnnouncement",
  () => [
    { no: 1, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "metadata", kind: "message", T: BlobMetadata },
  ],
);


exports.CreateBlobRequest = CreateBlobRequest;
exports.CreateBlobResponse = CreateBlobResponse;
exports.CreateBlobChunkedRequest = CreateBlobChunkedRequest;
exports.CreateBlobChunkedResponse = CreateBlobChunkedResponse;
exports.GetBlobRequest = GetBlobRequest;
exports.GetBlobResponse = GetBlobResponse;
exports.HeadBlobRequest = HeadBlobRequest;
exports.HeadBlobResponse = HeadBlobResponse;
exports.StreamBlobMetadataRequest = StreamBlobMetadataRequest;
exports.StreamBlobMetadataResponse = StreamBlobMetadataResponse;
exports.BlobAnnouncement = BlobAnnouncement;
