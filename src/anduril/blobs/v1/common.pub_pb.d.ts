// @generated by protoc-gen-es v1.7.2 with parameter "js_import_style=legacy_commonjs"
// @generated from file anduril/blobs/v1/common.pub.proto (package anduril.blobs.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * Metadata about the blob.
 *
 * @generated from message anduril.blobs.v1.BlobMetadata
 */
export declare class BlobMetadata extends Message<BlobMetadata> {
  /**
   * timestamp of when blob was created
   *
   * @generated from field: google.protobuf.Timestamp created_time = 1;
   */
  createdTime?: Timestamp;

  /**
   * timestamp of when this blob will be retained until.
   *
   * @generated from field: google.protobuf.Timestamp retention_time = 2;
   */
  retentionTime?: Timestamp;

  /**
   * size of the blob contents in bytes
   *
   * @generated from field: uint64 size_bytes = 3;
   */
  sizeBytes: bigint;

  /**
   * md5 sum/hash of blob contents
   *
   * @generated from field: bytes md5 = 4;
   */
  md5: Uint8Array;

  /**
   * MIME type of blob contents
   *
   * @generated from field: string content_type = 5;
   */
  contentType: string;

  /**
   * details regarding the blob's origin - aka source and type
   *
   * @generated from field: anduril.blobs.v1.BlobProvenance provenance = 6;
   */
  provenance?: BlobProvenance;

  constructor(data?: PartialMessage<BlobMetadata>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "anduril.blobs.v1.BlobMetadata";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BlobMetadata;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BlobMetadata;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BlobMetadata;

  static equals(a: BlobMetadata | PlainMessage<BlobMetadata> | undefined, b: BlobMetadata | PlainMessage<BlobMetadata> | undefined): boolean;
}

/**
 * @generated from message anduril.blobs.v1.BlobProvenance
 */
export declare class BlobProvenance extends Message<BlobProvenance> {
  /**
   * registered integration_name producing the Blob.
   *
   * @generated from field: string integration_name = 1;
   */
  integrationName: string;

  /**
   * data type defines what is inside of the Blob. Must be registered.
   *
   * @generated from field: string data_type = 2;
   */
  dataType: string;

  constructor(data?: PartialMessage<BlobProvenance>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "anduril.blobs.v1.BlobProvenance";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BlobProvenance;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BlobProvenance;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BlobProvenance;

  static equals(a: BlobProvenance | PlainMessage<BlobProvenance> | undefined, b: BlobProvenance | PlainMessage<BlobProvenance> | undefined): boolean;
}

