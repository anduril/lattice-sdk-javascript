// @generated by protoc-gen-connect-es v1.4.0 with parameter "js_import_style=legacy_commonjs"
// @generated from file anduril/blobs/v1/blobs_api.pub.proto (package anduril.blobs.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CreateBlobChunkedRequest, CreateBlobChunkedResponse, CreateBlobRequest, CreateBlobResponse, GetBlobRequest, GetBlobResponse, HeadBlobRequest, HeadBlobResponse, StreamBlobMetadataRequest, StreamBlobMetadataResponse } from "./blobs_api.pub_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * A general purpose blob storage service.
 *
 * @generated from service anduril.blobs.v1.BlobsAPI
 */
export declare const BlobsAPI: {
  readonly typeName: "anduril.blobs.v1.BlobsAPI",
  readonly methods: {
    /**
     * Creates a new blob. This is a simple form for small (<=2MB) blobs with unary atomic API.
     *
     * @generated from rpc anduril.blobs.v1.BlobsAPI.CreateBlob
     */
    readonly createBlob: {
      readonly name: "CreateBlob",
      readonly I: typeof CreateBlobRequest,
      readonly O: typeof CreateBlobResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Creates a new blob. This is for creating any sized blob using a client streaming API.
     *
     * @generated from rpc anduril.blobs.v1.BlobsAPI.CreateBlobChunked
     */
    readonly createBlobChunked: {
      readonly name: "CreateBlobChunked",
      readonly I: typeof CreateBlobChunkedRequest,
      readonly O: typeof CreateBlobChunkedResponse,
      readonly kind: MethodKind.ClientStreaming,
    },
    /**
     * Gets a blob (streams blob contents).
     *
     * @generated from rpc anduril.blobs.v1.BlobsAPI.GetBlob
     */
    readonly getBlob: {
      readonly name: "GetBlob",
      readonly I: typeof GetBlobRequest,
      readonly O: typeof GetBlobResponse,
      readonly kind: MethodKind.ServerStreaming,
    },
    /**
     * Gets the metadata for a blob, but not the contents.
     *
     * @generated from rpc anduril.blobs.v1.BlobsAPI.HeadBlob
     */
    readonly headBlob: {
      readonly name: "HeadBlob",
      readonly I: typeof HeadBlobRequest,
      readonly O: typeof HeadBlobResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Stream blob metadata announcements for the provided clientID.
     *
     * @generated from rpc anduril.blobs.v1.BlobsAPI.StreamBlobMetadata
     */
    readonly streamBlobMetadata: {
      readonly name: "StreamBlobMetadata",
      readonly I: typeof StreamBlobMetadataRequest,
      readonly O: typeof StreamBlobMetadataResponse,
      readonly kind: MethodKind.ServerStreaming,
    },
  }
};

