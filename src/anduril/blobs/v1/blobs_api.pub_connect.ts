// @generated by protoc-gen-connect-es v1.4.0 with parameter "target=ts"
// @generated from file anduril/blobs/v1/blobs_api.pub.proto (package anduril.blobs.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CreateBlobChunkedRequest, CreateBlobChunkedResponse, CreateBlobRequest, CreateBlobResponse, GetBlobRequest, GetBlobResponse, HeadBlobRequest, HeadBlobResponse, StreamBlobMetadataRequest, StreamBlobMetadataResponse } from "./blobs_api.pub_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * A general purpose blob storage service.
 *
 * @generated from service anduril.blobs.v1.BlobsAPI
 */
export const BlobsAPI = {
  typeName: "anduril.blobs.v1.BlobsAPI",
  methods: {
    /**
     * Creates a new blob. This is a simple form for small (<=2MB) blobs with unary atomic API.
     *
     * @generated from rpc anduril.blobs.v1.BlobsAPI.CreateBlob
     */
    createBlob: {
      name: "CreateBlob",
      I: CreateBlobRequest,
      O: CreateBlobResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Creates a new blob. This is for creating any sized blob using a client streaming API.
     *
     * @generated from rpc anduril.blobs.v1.BlobsAPI.CreateBlobChunked
     */
    createBlobChunked: {
      name: "CreateBlobChunked",
      I: CreateBlobChunkedRequest,
      O: CreateBlobChunkedResponse,
      kind: MethodKind.ClientStreaming,
    },
    /**
     * Gets a blob (streams blob contents).
     *
     * @generated from rpc anduril.blobs.v1.BlobsAPI.GetBlob
     */
    getBlob: {
      name: "GetBlob",
      I: GetBlobRequest,
      O: GetBlobResponse,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * Gets the metadata for a blob, but not the contents.
     *
     * @generated from rpc anduril.blobs.v1.BlobsAPI.HeadBlob
     */
    headBlob: {
      name: "HeadBlob",
      I: HeadBlobRequest,
      O: HeadBlobResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Stream blob metadata announcements for the provided clientID.
     *
     * @generated from rpc anduril.blobs.v1.BlobsAPI.StreamBlobMetadata
     */
    streamBlobMetadata: {
      name: "StreamBlobMetadata",
      I: StreamBlobMetadataRequest,
      O: StreamBlobMetadataResponse,
      kind: MethodKind.ServerStreaming,
    },
  }
} as const;

