// @generated by protoc-gen-es v1.7.2 with parameter "target=ts"
// @generated from file anduril/auth/v2/tokens.pub.proto (package anduril.auth.v2, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Duration, Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message anduril.auth.v2.RefreshOidcTokensRequest
 */
export class RefreshOidcTokensRequest extends Message<RefreshOidcTokensRequest> {
  /**
   * @generated from field: string refresh_token = 1;
   */
  refreshToken = "";

  constructor(data?: PartialMessage<RefreshOidcTokensRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "anduril.auth.v2.RefreshOidcTokensRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "refresh_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RefreshOidcTokensRequest {
    return new RefreshOidcTokensRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RefreshOidcTokensRequest {
    return new RefreshOidcTokensRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RefreshOidcTokensRequest {
    return new RefreshOidcTokensRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RefreshOidcTokensRequest | PlainMessage<RefreshOidcTokensRequest> | undefined, b: RefreshOidcTokensRequest | PlainMessage<RefreshOidcTokensRequest> | undefined): boolean {
    return proto3.util.equals(RefreshOidcTokensRequest, a, b);
  }
}

/**
 * @generated from message anduril.auth.v2.RefreshOidcTokensResponse
 */
export class RefreshOidcTokensResponse extends Message<RefreshOidcTokensResponse> {
  /**
   * The length of time that the token is valid for. User agents must refresh the user's token within this time
   * period.
   *
   * @generated from field: google.protobuf.Duration token_validity_duration = 1;
   */
  tokenValidityDuration?: Duration;

  /**
   * @generated from field: string refresh_token = 2;
   */
  refreshToken = "";

  /**
   * @generated from field: string id_token = 3;
   */
  idToken = "";

  constructor(data?: PartialMessage<RefreshOidcTokensResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "anduril.auth.v2.RefreshOidcTokensResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "token_validity_duration", kind: "message", T: Duration },
    { no: 2, name: "refresh_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "id_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RefreshOidcTokensResponse {
    return new RefreshOidcTokensResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RefreshOidcTokensResponse {
    return new RefreshOidcTokensResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RefreshOidcTokensResponse {
    return new RefreshOidcTokensResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RefreshOidcTokensResponse | PlainMessage<RefreshOidcTokensResponse> | undefined, b: RefreshOidcTokensResponse | PlainMessage<RefreshOidcTokensResponse> | undefined): boolean {
    return proto3.util.equals(RefreshOidcTokensResponse, a, b);
  }
}

